-- phpMyAdmin SQL Dump
-- version 5.1.3
-- https://www.phpmyadmin.net/
--
-- Host: 127.0.0.1
-- Generation Time: Mar 27, 2022 at 05:15 PM
-- Server version: 10.4.24-MariaDB
-- PHP Version: 8.1.4

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";

--
-- Database: `admissione`
--
CREATE DATABASE IF NOT EXISTS `admissione` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci;
USE `admissione`;

-- --------------------------------------------------------

--
-- Table structure for table `admin`
--

CREATE TABLE `admin` (
  `id` int(11) NOT NULL,
  `full_name` varchar(200) NOT NULL,
  `email` varchar(200) NOT NULL,
  `password` varchar(200) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Dumping data for table `admin`
--

INSERT INTO `admin` (`id`, `full_name`, `email`, `password`) VALUES
(1, 'Rahul', 'rroy11705@gmail.com', 'e_h&jUy4Kr#&uz-w');

-- --------------------------------------------------------

--
-- Table structure for table `category`
--

CREATE TABLE `category` (
  `id` int(11) NOT NULL,
  `name` varchar(200) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Dumping data for table `category`
--

INSERT INTO `category` (`id`, `name`) VALUES
(10, 'reactjs'),
(11, 'django REST Framework'),
(12, 'nodejs'),
(13, 'SQL'),
(15, 'JEE Mains 2022');

-- --------------------------------------------------------

--
-- Table structure for table `comments`
--

CREATE TABLE `comments` (
  `id` int(11) NOT NULL,
  `comment` text NOT NULL,
  `name` varchar(200) NOT NULL,
  `post_id` int(11) NOT NULL,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp()
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Dumping data for table `comments`
--

INSERT INTO `comments` (`id`, `comment`, `name`, `post_id`, `created_at`) VALUES
(1, 'this is awesome article', 'Monu Sharma', 21, '2021-02-20 19:08:11'),
(2, 'i like thispost', 'Sunidhi Chauhan', 21, '2021-02-20 19:08:11'),
(3, 'this is a test comment', 'Sonali Rana', 21, '2021-02-20 19:32:13'),
(4, 'this is my first comment on this post', 'Monu Giri', 4, '2021-02-20 19:33:31'),
(5, 'this is my another comment', 'Mohan Rana', 4, '2021-02-20 19:35:53'),
(6, 'this was awesome i learned a lot', 'Monu Giri', 20, '2021-02-20 19:36:37'),
(7, 'i love it ', 'Shruti Sharma', 20, '2021-02-20 19:36:52'),
(8, 'it was awesome man', 'Pankaj Udas', 20, '2021-02-20 19:37:48'),
(9, 'i like this post', 'Piyush Raj', 20, '2021-02-20 19:38:05'),
(10, 'this is super cool', 'Shivam Sharma', 20, '2021-02-20 19:38:21'),
(11, 'yeah i like this ', 'Adity Bisht', 20, '2021-02-20 19:38:38'),
(12, 'sdsd', 'sdsd', 21, '2021-02-23 16:31:47'),
(13, 'Hellp', 'Hi', 20, '2022-03-21 21:42:42'),
(14, 'This is awesome', 'Raj', 40, '2022-03-22 22:05:13'),
(15, '', '', 40, '2022-03-22 22:07:12'),
(16, 'Really needed it, thanks', 'Andre', 41, '2022-03-23 20:04:41'),
(17, 'Bal', 'Raja', 40, '2022-03-27 11:57:34');

-- --------------------------------------------------------

--
-- Table structure for table `contact`
--

CREATE TABLE `contact` (
  `id` bigint(20) NOT NULL,
  `name` varchar(255) NOT NULL,
  `email` varchar(255) NOT NULL,
  `phone` varchar(15) NOT NULL,
  `school` varchar(255) NOT NULL,
  `message` text NOT NULL,
  `is_contacted` tinyint(1) NOT NULL,
  `contacted_at` timestamp NOT NULL DEFAULT current_timestamp()
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Dumping data for table `contact`
--

INSERT INTO `contact` (`id`, `name`, `email`, `phone`, `school`, `message`, `is_contacted`, `contacted_at`) VALUES
(4, 'Rahul Roy', 'rroy11705@gmail.com', '+91-905399635', 'school', 'hi', 0, '2022-03-24 16:30:08'),
(5, 'Rahul Roy', 'rroy11705@gmail.com', '91905399635', 'school', 'hi', 0, '2022-03-24 16:30:08'),
(10, 'Rahul Roy', 'rroy11705@gmail.com', '919051399635', 'Nava Nalanda', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce vitae commodo metus. Vivamus porttitor tempor ligula et volutpat. Aliquam urna leo, lobortis eu magna at, facilisis interdum augue. Maecenas tempor pharetra metus vitae egestas. Nulla magna odio, interdum nec nibh et, bibendum sollicitudin mi. Quisque ac vestibulum lectus. Integer et justo ac libero mollis consectetur. Vivamus sit amet ex a urna maximus ullamcorper. Sed malesuada, eros vitae elementum fermentum, justo elit dapibus ex, quis auctor magna neque in urna. Quisque eget mattis ligula. Mauris ut maximus eros, eget dictum justo. Aenean et sem aliquam, lacinia urna eget, luctus enim. Phasellus sollicitudin at ligula eget malesuada. Vestibulum mattis pharetra enim eget sodales. Proin dignissim eros quis purus dapibus suscipit.', 1, '2022-03-24 16:30:08'),
(22, 'Debasish Srkar', 'deba@gmail.com', '919876543210', 'XYZ', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce vitae commodo metus. Vivamus porttitor tempor ligula et volutpat. Aliquam urna leo, lobortis eu magna at, facilisis interdum augue. Maecenas tempor pharetra metus vitae egestas. Nulla magna odio, interdum nec nibh et, bibendum sollicitudin mi. Quisque ac vestibulum lectus. Integer et justo ac libero mollis consectetur.', 1, '2022-03-27 12:30:34');

-- --------------------------------------------------------

--
-- Table structure for table `images`
--

CREATE TABLE `images` (
  `id` int(11) NOT NULL,
  `post_id` int(11) NOT NULL,
  `image` text NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Dumping data for table `images`
--

INSERT INTO `images` (`id`, `post_id`, `image`) VALUES
(1, 11, '1.jpg'),
(2, 11, '2.jpg'),
(3, 0, '3.jpg'),
(4, 20, '4.jpg'),
(5, 20, '5.jpg'),
(6, 20, '1.jpg'),
(7, 33, 'moon-2048727_1920.jpg'),
(8, 33, 'children-5833685_1920.jpg'),
(9, 34, 'moon-2048727_1920.jpg'),
(10, 34, 'children-5833685_1920.jpg'),
(11, 35, 'moon-2048727_1920.jpg'),
(12, 35, 'children-5833685_1920.jpg'),
(13, 36, '7-76366_avengers-infinity-war-hd.jpg'),
(14, 36, 'moon-2048727_1920.jpg'),
(15, 37, 'react-intro.webp'),
(16, 38, 'react-intro.webp'),
(17, 40, 'react-intro.webp'),
(18, 41, 'drf-logo2.png'),
(19, 42, 'drf-logo2.png'),
(20, 43, '2400х1260-rw-blog-node-js.png'),
(21, 44, '2400х1260-rw-blog-node-js.png'),
(22, 45, 'react-intro.webp'),
(23, 46, 'react-intro.webp'),
(24, 47, 'How-Do-I-Find-Duplicate-Values-in-SQL_hu9ca00ddb40973ded45c506aba035750b_183055_968x550_fill_box_center_2.png'),
(25, 48, 'P block_page-0001.jpg'),
(26, 49, 'P block_page-0004.jpg'),
(27, 49, 'P block_page-0005.jpg'),
(28, 49, 'P block_page-0006.jpg'),
(29, 49, 'P block_page-0007.jpg'),
(30, 49, 'P block_page-0001.jpg'),
(31, 49, 'P block_page-0002.jpg'),
(32, 49, 'P block_page-0003.jpg');

-- --------------------------------------------------------

--
-- Table structure for table `posts`
--

CREATE TABLE `posts` (
  `id` int(11) NOT NULL,
  `title` text NOT NULL,
  `content` text NOT NULL,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  `category_id` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Dumping data for table `posts`
--

INSERT INTO `posts` (`id`, `title`, `content`, `created_at`, `category_id`) VALUES
(40, 'How to Use Basic React Hooks for State and Effects', '<p>With React Conf 2018 behind us, we have learned that with release 16.7 of React, an important new feature will be available: React Hooks. Join me as we go through working examples and get \"hooked\" on React.</p>\r\n\r\n<p>We are watching React slowly become more opinionated, and with the latest features, I would dare to say it\'s becoming more like a framework than ever before. React has typically been known to be less of a fully featured framework and more of a library that lets you render DOM and manage its state really well. The ecosystem has a few tools that are opinionated and still widely used as standard in a lot of React apps, like Redux for instance. Now Hooks are not Redux, but they are an alternative way of doing things for those who recently found Redux, which builds on the Flux pattern as a requirement for every application to mange state.</p>\r\n\r\n<p>I believe that Hooks are a bridge to Redux but also a way of managing simple state without introducing Redux. It makes total sense that Dan Abramov was the one who showed us our first working example at React Conf 2018 as he is also the creator and <a href=\"https://github.com/reduxjs/redux/graphs/contributors\">main contributor to Redux</a>. I think this lends credibility in some way towards the use of Hooks and indicates they are thinking about how to bring better state management into React core, and how to also ensure that Hooks will compliment and make use with Redux a priority.</p>\r\n\r\n<p>With the introduction of things like code splitting, suspense, lazy, memo and now hooks, I think that the changes we have seen in 2018 are done with the developer and performance in mind. Competition with other frameworks is also becoming a reality. This competitive environment I believe is what is forcing React to become more of a lightweight framework. And if we are going to see a more opinionated React with framework-like features, I\'m really happy about how the React team is going about these latest additions to the API. I asked a few people if they thought React was becoming a framework, a few said yes, one person just sighed, and another said, until they make the router part of React, I don\'t consider it a framework.</p>\r\n\r\n<h2>\r\n  <a name=\"hooks-for-the-win\" href=\"#hooks-for-the-win\" class=\"anchor\">\r\n  </a>\r\n  Hooks for the Win\r\n</h2>\r\n\r\n<p>With <a href=\"https://conf.reactjs.org/\">React Conf 2018</a> behind us, we have learned that with release 16.7, a new feature will be available: <a href=\"https://reactjs.org/docs/hooks-intro.html\">React Hooks</a>.</p>\r\n\r\n<p>Currently you can read about the <a href=\"https://reactjs.org/docs/hooks-intro.html\">Hooks</a>, view the <a href=\"https://github.com/reactjs/rfcs/pull/68\">RFC (Request for Comments)</a> and play around with the new feature using: <code>npm install react@next react-dom@next</code>. Hooks represent a strictly additive feature to <a href=\"https://reactjs.org/\">React</a> that introduces <a href=\"https://reactjs.org/docs/hooks-intro.html#no-breaking-changes\">no breaking changes</a>, meaning it\'s completely opt-in. It provides an alternative to writing class based components simply to use state and access life-cycle methods.</p>\r\n\r\n<p>Because Hooks will be implemented with a <a href=\"https://reactjs.org/docs/hooks-intro.html#gradual-adoption-strategy\">gradual adoption strategy</a> (living side-by-side with existing code), it gives teams time to refactor their code or simply leave the legacy code alone as they introduce new functional components using Hooks. Hooks have already been dubbed: \"The Future of React,\" but it is also noted that classes will be supported for the foreseeable future. Hooks bring to functional components the things we once were only able to do with classes. Like being able to work with <a href=\"https://reactjs.org/docs/hooks-state.html\">state</a>, <a href=\"https://reactjs.org/docs/hooks-effect.html\">effects</a> and context specifically.</p>\r\n\r\n<p>In the past, some React developers have experienced confusion around when to use and when not to use classes. <a href=\"https://twitter.com/SophieBits\">@SophieBits</a> commented in the <a href=\"https://www.youtube.com/watch?v=V-QO-KO90iQ\">\"React Today and Tomorrow\"</a> talk that classes can be \"<a href=\"https://reactjs.org/docs/hooks-intro.html#classes-confuse-both-people-and-machines\">hard for humans and machines as well</a>.\" I think we will see more of this move away from classes whenever possible. It\'s actually the right thing to do in some cases - the stance on this goes back years with talks like: <a href=\"https://medium.com/@dan_abramov/how-to-use-classes-and-sleep-at-night-9af8de78ccb4\">\"How to Sleep at Night using React Classes,\"</a> even though we must sometimes use them in the current React. But that issue is being handled now and we already see developers having strong opinions and using mostly functional components when and where they can.</p>\r\n\r\n<p>Hooks give functional components the upper hand in React. Some of the additional Hooks already <a href=\"https://reactjs.org/docs/hooks-reference.html\">available in the React API (16.7.0-alpha)</a> include: useReducer, useCallback, useMemo, useRef, useImperativeMethods, useMutationEffect, useLayoutEffect, uhh did I get them all? Just driving the point home, this is useful stuff!</p>\r\n\r\n<h2>\r\n  <a name=\"so-what-are-hooks-how-do-we-use-them\" href=\"#so-what-are-hooks-how-do-we-use-them\" class=\"anchor\">\r\n  </a>\r\n  So What are Hooks, How do We Use Them?\r\n</h2>\r\n\r\n<p>The easiest way to describe Hooks is to simply show you two examples, one being a class component that needs to have access to state and life-cycle methods and another example where we achieve the same thing with a functional component. I have read through the proposal for Hooks and for this reason I will use a similar code sample that Dan Abramov uses in the docs.</p>\r\n\r\n<p>You could just read the docs, and I suggest doing so. However, I wanted to provide you with a working example that you can touch and feel and play around with. I learn best by getting my hands dirty. For this reason I wanted to provide the same examples illustrated in the docs, but with a <a href=\"https://stackblitz.com/\">StackBlitz</a> demo for each stage so that you can test it out for yourself.</p>\r\n\r\n<p>This GIF below shows the difference between the Class and Functional Component example we will see in the next section:</p>\r\n\r\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--G6SKtkKQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://d585tldpucybw.cloudfront.net/sfimages/default-source/default-album/reactstatehook-04n054a108f6e739248898fad28d2ed3da9c6.gif%3Fsfvrsn%3D137e3710_1\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--G6SKtkKQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://d585tldpucybw.cloudfront.net/sfimages/default-source/default-album/reactstatehook-04n054a108f6e739248898fad28d2ed3da9c6.gif%3Fsfvrsn%3D137e3710_1\" alt=\"Functional vs Class\" title=\"State and Effect (Hooks)\" loading=\"lazy\"></a></p>\r\n\r\n<h3>\r\n  <a name=\"sidebyside-example-of-raw-usestate-endraw-\" href=\"#sidebyside-example-of-raw-usestate-endraw-\" class=\"anchor\">\r\n  </a>\r\n  Side-by-Side Example of <code>useState</code>\r\n</h3>\r\n\r\n<p>Below we follow the canonical counter example provided in the React docs. It contains a button inside of a <code>Counter</code> component. Once clicked, it advances the state by one and updates the <code>state.count</code> for rendering purposes.</p>\r\n\r\n<p>First we see how to do this with a class based component using just <code>setState</code> :</p>\r\n\r\n<p>The first thing to notice about the class-based component is that the class syntax uses a constructor that references the <code>this</code> keyword. Inside the constructor we have a state property. We also update the count using <code>setState()</code>.</p>\r\n\r\n<p>Now, lets see how to do the same thing with Hooks, using a functional component:</p>\r\n\r\n<p>In the functional component example we have an additional import of <code>useState</code>. There\'s no more class syntax or constructor, just a <code>const</code>. Its assignment sets the default and provides not only the <code>count</code> property, but a function for modifying that state called <code>setCount</code>. This <code>setCount</code> refers to a function and can be named whatever you like.</p>\r\n\r\n<p>The functional component <code>incrementCount</code> method is easier to read, and references our state value directly instead of referencing <code>this.state</code>.</p>\r\n\r\n<h3>\r\n  <a name=\"sidebyside-example-of-raw-useeffect-endraw-\" href=\"#sidebyside-example-of-raw-useeffect-endraw-\" class=\"anchor\">\r\n  </a>\r\n  Side-by-Side Example of <code>useEffect</code>\r\n</h3>\r\n\r\n<p>When updating state, we sometimes have side effects that need to happen along with each change. In our example of the counter, we may need to update the database, make a change to local storage or simply update the document title. In the docs, the React team chose the latter example to make things as simple to understand as possible. So let\'s do just that and update our examples to have a side effect that uses the new Hook <code>useEffect</code>.</p>\r\n\r\n<p>Let\'s add this side effect to our existing counter example and again look at the old way of doing this with Classes vs working with Hooks. We will first see how to do this with a basic class-based component:</p>\r\n\r\n<p>And next how to do the same thing with Hooks:</p>\r\n\r\n<p>Now that we are introducing additional behavior, we start to see even more evidence of how switching to Hooks provides a cleaner way of dealing with state and side effects. What took two separate life-cycle methods in the class component we can achieve with just one call to <code>useEffect</code>. We do have one more import on the functional component example, but if we can get rid of the class syntax, an additional life-cycle method and make our code cleaner and more readable, it\'s totally worth it.</p>\r\n\r\n<h2>\r\n  <a name=\"call-raw-usestate-endraw-and-raw-useeffect-endraw-as-much-as-you-want\" href=\"#call-raw-usestate-endraw-and-raw-useeffect-endraw-as-much-as-you-want\" class=\"anchor\">\r\n  </a>\r\n  Call <code>useState</code> and <code>useEffect</code> as Much as You Want!\r\n</h2>\r\n\r\n<p>Just like with <code>setState</code>, you can call <code>useState</code> as many times as you want. Let\'s switch to an example that shows a slightly more involved situation where we have a name we are displaying on the page, some inputs that allow for the name to be changed, and we want control over both the first name and the last name. We can create two separate properties, each with their own update or set function, and simply call <code>useState</code> on each in order to set the default.</p>\r\n\r\n<p>In the GIF below, you can see what this would look like - as well as what it looks like with a class-based version, which we\'ll dig into a little more below.</p>\r\n\r\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--xNKjjeDM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://d585tldpucybw.cloudfront.net/sfimages/default-source/default-album/reactstatehook-06n07.gif%3Fsfvrsn%3D18e0cae0_1\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--xNKjjeDM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://d585tldpucybw.cloudfront.net/sfimages/default-source/default-album/reactstatehook-06n07.gif%3Fsfvrsn%3D18e0cae0_1\" alt=\"Functional vs Class\" title=\"State and Effects (Hooks)\" loading=\"lazy\"></a></p>\r\n\r\n<p>As you would expect we also have an update function for each name so that you can handle changes to them independently.</p>\r\n\r\n<p>Let\'s see the code for the class-based component:</p>\r\n\r\n<p>And now the same thing with Hooks:</p>\r\n\r\n<p>I won\'t go over all the differences again, but I wanted you to see a slightly more complex example side-by-side. Hopefully you are starting to see the benefit of using Hooks.</p>\r\n\r\n<p>Let\'s make one more change to this example and use <code>useEffect</code> to save our name to local storage so that we don\'t lose our state when we refresh the page.</p>\r\n\r\n<p>Let\'s see the code for the class-based component:</p>\r\n\r\n<p>And now the same thing with Hooks:</p>\r\n\r\n<h2>\r\n  <a name=\"wrap-up\" href=\"#wrap-up\" class=\"anchor\">\r\n  </a>\r\n  Wrap Up\r\n</h2>\r\n\r\n<p>I hope that these interactive examples allow you to understand the basics of <code>setState</code> and <code>useEffect</code>. I plan to release more articles on the subject of React Hooks as well how to use them with our <a href=\"https://www.telerik.com/kendo-react-ui/\">KendoReact native React components</a>. If you are new to React, we have more content here on the Telerik blog specifically around <a href=\"https://www.telerik.com/blogs/all-things-react\">All Things React</a>, which contains a plethora of information about React and its ecosystem. Please explore our articles and products and let me know if you have any questions or ideas for articles on subjects relating to React.</p>\r\n\r\n<p>Thanks for taking the time to read about React Hooks - below is additional information around the topic that you can find online!</p>\r\n\r\n<h2>\r\n  <a name=\"early-documentation-and-articles-on-hooks\" href=\"#early-documentation-and-articles-on-hooks\" class=\"anchor\">\r\n  </a>\r\n  Early Documentation and Articles on Hooks:\r\n</h2>\r\n\r\n<p><a href=\"https://reactjs.org/docs/hooks-intro.html\">React Docs on Hooks</a><br><br>\r\n<a href=\"https://dev.to/ben/making-sense-of-react-hooks-2in4-temp-slug-3153604\">Making Sense of React Hooks</a><br><br>\r\n<a href=\"https://blog.bitsrc.io/understanding-hooks-in-react-a-deep-dive-d5d5dc88ecd9\">Understanding Hooks in React a Deep Dive</a><br><br>\r\n<a href=\"https://dev.to/dceddia/a-simple-intro-to-react-hooks-1okm-temp-slug-5362079\">A Simple Intor into Hooks</a><br><br>\r\n<a href=\"https://dev.to/techiediaries/react-167-hooks--with-axios-and-django-api-part-1-217f-temp-slug-436890\">React 16.7 Hooks Tutorial</a><br><br>\r\n<a href=\"https://formidable.com/blog/2018/hooked-facebook-react/\">Hooked (Formiddable)</a><br><br>\r\n<a href=\"https://medium.com/iqoqo-engineering/flux-without-the-fuss-from-containers-to-hooks-bda35c622e3f\">Flux Without Fuss: From Containers to Hooks</a></p>\r\n\r\n<h2>\r\n  <a name=\"video-resources-on-hooks\" href=\"#video-resources-on-hooks\" class=\"anchor\">\r\n  </a>\r\n  Video Resources on Hooks\r\n</h2>\r\n\r\n<p><a href=\"https://www.youtube.com/watch?v=kz3nVya45uQ\">React Conf 2018 Day One Talks</a><br><br>\r\n<a href=\"https://egghead.io/lessons/react-share-complex-logic-across-react-components-with-custom-hooks\">Share Complex Logic across React Components with Custom Hooks</a><br><br>\r\n<a href=\"https://egghead.io/lessons/react-access-and-modify-a-dom-node-with-the-react-useref-and-useeffect-hooks\">Access and Modify a DOM Node with the React useRef and useEffect Hooks</a><br><br>\r\n<a href=\"https://egghead.io/lessons/react-share-logic-across-multiple-react-components-with-custom-hooks\">Share Logic Across Multiple React Components with Custom Hooks</a><br><br>\r\n<a href=\"https://egghead.io/lessons/react-use-the-usestate-react-hook\">Use the useState React Hook</a><a href=\"https://egghead.io/lessons/react-test-react-components-that-use-react-hooks\">Test React Components that use React Hooks</a><br><br>\r\n<a href=\"https://www.youtube.com/watch?v=jd8R0a2Ur8Q\">React Hooks a Complete Introduction</a><br><br>\r\n<a href=\"https://www.youtube.com/watch?v=cAZ-fOd1RpA\">TODO List with Hooks</a></p>', '2022-03-22 21:51:21', 10),
(41, 'Django rest framework writable nested serializer', '<h4>\r\n  <a name=\"prepare\" href=\"#prepare\">\r\n  </a>\r\n  Prepare\r\n</h4>\r\n\r\n<ul>\r\n<li>You have Django and Django rest framework</li>\r\n<li>You have <code>User</code> with <code>Profile</code> as <code>one-to-one</code>\r\n</li>\r\n<li>You have serializers:\r\n</li>\r\n</ul>\r\n\r\n<div class=\"highlight js-code-highlight\">\r\n<pre class=\"highlight python\"><code><span class=\"k\">class</span> <span class=\"nc\">UserProfileSerializer</span><span class=\"p\">(</span><span class=\"n\">serializers</span><span class=\"p\">.</span><span class=\"n\">ModelSerializer</span><span class=\"p\">):</span>\r\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\r\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">UserProfile</span>\r\n        <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\r\n            <span class=\"s\">\'experience\'</span><span class=\"p\">,</span>\r\n            <span class=\"s\">\'rate\'</span><span class=\"p\">,</span>\r\n        <span class=\"p\">]</span>\r\n\r\n<span class=\"k\">class</span> <span class=\"nc\">UserSerializer</span><span class=\"p\">(</span><span class=\"n\">serializers</span><span class=\"p\">.</span><span class=\"n\">ModelSerializer</span><span class=\"p\">):</span>\r\n    <span class=\"n\">avatar</span> <span class=\"o\">=</span> <span class=\"n\">ImageBase64Field</span><span class=\"p\">(</span><span class=\"n\">required</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">)</span>\r\n    <span class=\"n\">profile</span> <span class=\"o\">=</span> <span class=\"n\">UserProfileSerializer</span><span class=\"p\">(</span><span class=\"n\">required</span><span class=\"o\">=</span><span class=\"bp\">False</span><span class=\"p\">)</span>\r\n\r\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\r\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">User</span>\r\n        <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\r\n            <span class=\"s\">\'uid\'</span><span class=\"p\">,</span>\r\n            <span class=\"s\">\'first_name\'</span><span class=\"p\">,</span>\r\n            <span class=\"s\">\'last_name\'</span><span class=\"p\">,</span>\r\n            <span class=\"s\">\'profile\'</span>\r\n        <span class=\"p\">]</span>\r\n\r\n</code></pre>\r\n<div class=\"highlight__panel js-actions-panel\">\r\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\r\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\r\n</svg>\r\n\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\r\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\r\n</svg>\r\n\r\n</div>\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n<h4>\r\n  <a name=\"problems\" href=\"#problems\">\r\n  </a>\r\n  Problems\r\n</h4>\r\n\r\n<ul>\r\n<li>You want to update <code>experience</code> field in user profile</li>\r\n</ul>\r\n\r\n<h4>\r\n  <a name=\"solution\" href=\"#solution\">\r\n  </a>\r\n  Solution\r\n</h4>\r\n\r\n<p>Add <code>update</code> method in your <code>UserSerializer</code> class.<br>\r\n</p>\r\n\r\n<div class=\"highlight js-code-highlight\">\r\n<pre class=\"highlight python\"><code><span class=\"k\">class</span> <span class=\"nc\">UserSerializer</span><span class=\"p\">(</span><span class=\"n\">serializers</span><span class=\"p\">.</span><span class=\"n\">ModelSerializer</span><span class=\"p\">):</span>\r\n    <span class=\"p\">...</span>\r\n\r\n    <span class=\"k\">def</span> <span class=\"nf\">update</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">instance</span><span class=\"p\">,</span> <span class=\"n\">validated_data</span><span class=\"p\">):</span>\r\n        <span class=\"k\">if</span> <span class=\"n\">validated_data</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s\">\'profile\'</span><span class=\"p\">):</span>\r\n            <span class=\"n\">profile_data</span> <span class=\"o\">=</span> <span class=\"n\">validated_data</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s\">\'profile\'</span><span class=\"p\">)</span>\r\n            <span class=\"n\">profile_serializer</span> <span class=\"o\">=</span> <span class=\"n\">UserProfileSerializer</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">profile_data</span><span class=\"p\">)</span>\r\n\r\n            <span class=\"k\">if</span> <span class=\"n\">profile_serializer</span><span class=\"p\">.</span><span class=\"n\">is_valid</span><span class=\"p\">():</span>\r\n                <span class=\"n\">profile</span> <span class=\"o\">=</span> <span class=\"n\">profile_serializer</span><span class=\"p\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">instance</span><span class=\"o\">=</span><span class=\"n\">instance</span><span class=\"p\">.</span><span class=\"n\">profile</span><span class=\"p\">,</span>\r\n                                                    <span class=\"n\">validated_data</span><span class=\"o\">=</span><span class=\"n\">profile_serializer</span><span class=\"p\">.</span><span class=\"n\">validated_data</span><span class=\"p\">)</span>\r\n                <span class=\"n\">validated_data</span><span class=\"p\">[</span><span class=\"s\">\'profile\'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">profile</span>\r\n\r\n        <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">().</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">instance</span><span class=\"p\">,</span> <span class=\"n\">validated_data</span><span class=\"p\">)</span>\r\n\r\n</code></pre>\r\n<div class=\"highlight__panel js-actions-panel\">\r\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\r\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\r\n</svg>\r\n\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\r\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\r\n</svg>\r\n\r\n</div>\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n<p>Now, with <code>user data</code> we may to send <code>profile</code> data and update our user <code>profile</code>.</p>\r\n\r\n<h4>\r\n  <a name=\"conclusion\" href=\"#conclusion\">\r\n  </a>\r\n  Conclusion\r\n</h4>\r\n\r\n<ul>\r\n<li>Now we may to update user profile easily in one request</li>\r\n</ul>\r\n\r\n<p><strong>Thanks for reading</strong></p>', '2022-03-23 20:02:16', 11),
(42, 'How to use Postman to authenticate to Django Rest Framework', '<p>Authenticating using a username &amp; password in a Django Rest Framework API is very straight forward in the browser, you type in the login URL, enter your username and password and login. The process is different when using an HTTP client like Postman because there are some headers you need to manually set first. I’ll show you how.</p>\r\n\r\n<h3>\r\n  <a name=\"cross-site-request-forgerycsrf-protection\" href=\"#cross-site-request-forgerycsrf-protection\">\r\n  </a>\r\n  Cross Site Request Forgery(CSRF) protection\r\n</h3>\r\n\r\n<p>Django provides easy to use protection against Cross SIte Request Forgery. The Django docs describe CSRF attacks as a type of attack that “occurs when a malicious website contains a link, a form button or some JavaScript that is intended to perform some action on your website, using the credentials of a logged-in user who visits the malicious site in their browser.”.  To protect you from this type of attack, Django requires that every form submission or HTTP POST request include a CSRF token.</p>\r\n\r\n<p>CSRF tokens are random, unique, secret and unpredictable values that are generated by Django and transmitted to the client application in such a way that it is included in subsequent HTTP requests made by the client. When the client makes requests to the Django server, Django will check to see if the client’s request contains this token. If the request does not contain the CSRF token, it is rejected.</p>\r\n\r\n<p>To put it simply, Django knows that there are malicious users who could attempt to impersonate legitimate users. So it adds a layer of security by requiring each client that connects with it to provide a token or secret key that only Django and that particular client know about. Since attackers cannot predict the CSRF token that will be issued to a user, it makes it impossible to construct a request that Django will honour without all the parameters.</p>\r\n\r\n<p>This is what makes logging in or authenticating with a Django API challenging in clients such as Postman. Having this knowledge of how authentication works helps to make the process simple.</p>\r\n\r\n<h3>\r\n  <a name=\"authenticating\" href=\"#authenticating\">\r\n  </a>\r\n  Authenticating\r\n</h3>\r\n\r\n<p>Authenticating with Django is a three step process:</p>\r\n\r\n<ol>\r\n<li>Get the CSRF token from the  Django server</li>\r\n<li>Construct the HTTP POST request and include the <code>X-CSRF</code> header</li>\r\n<li>Submit form data</li>\r\n</ol>\r\n\r\n<h4>\r\n  <a name=\"getting-the-csrf-token\" href=\"#getting-the-csrf-token\">\r\n  </a>\r\n  Getting the CSRF token\r\n</h4>\r\n\r\n<p>The first step is to get issued a CSRF token. To do this, visit the authentication URL. In most Django Rest Framework applications, this is <a href=\"http://127.0.0.1:8000/auth/login\">/auth/login</a>. This page has this familiar login form when viewed from a browser:</p>\r\n\r\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--ASfQDE2q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/vuyisile.com/wp-content/uploads/2020/12/drf_login.jpg%3Fresize%3D352%252C295\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--ASfQDE2q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/vuyisile.com/wp-content/uploads/2020/12/drf_login.jpg%3Fresize%3D352%252C295\" alt=\"Django login form\" loading=\"lazy\"></a></p>\r\n\r\n<p>When you land on this page, Django issues your client application a csrf token behind the scenes and says something like “hey, you’re new here, here’s a secret token that’s unique to you. Use it every time you want to talk to me so I know its you okay?”. Next, you fill out your credentials and hit the log in button. Your browser sends your credentials in the HTTP POST request it makes and adds a special CSRF header with the csrf token it got from Django when it first landed on this page.</p>\r\n\r\n<p>Django will see this and allow the login.</p>\r\n\r\n<p>To authenticate in Postman, the same general steps apply. You first have to make a  HTTP GET request <strong>without any parameters</strong> or authorisation to this endpoint in order to get the CSRF token.</p>\r\n\r\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GtBg4yex--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/vuyisile.com/wp-content/uploads/2020/12/postman_GET.png%3Fresize%3D632.4%252C375\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--GtBg4yex--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/vuyisile.com/wp-content/uploads/2020/12/postman_GET.png%3Fresize%3D632.4%252C375\" alt=\"Postman GET request\" loading=\"lazy\"></a></p>\r\n\r\n<p>After sending the HTTP GET request you will get a <code>csrftoken</code> cookie as shown above. This is something you’ll want to pass as a request header in your next HTTP POST request. Lets  setup the HTTP POST request.</p>\r\n\r\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--3EJOp-Iu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/vuyisile.com/wp-content/uploads/2020/12/postman_POST_Form_data.png%3Fresize%3D632.4%252C329\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--3EJOp-Iu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/vuyisile.com/wp-content/uploads/2020/12/postman_POST_Form_data.png%3Fresize%3D632.4%252C329\" alt=\"Postman http post form data\" loading=\"lazy\"></a></p>\r\n\r\n<p>In the Body tab, enter your credentials under the form-data section. Next, add the csrf header:</p>\r\n\r\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--2JSLtukb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/vuyisile.com/wp-content/uploads/2020/12/postman_POST.png%3Fresize%3D632.4%252C321\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--2JSLtukb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/vuyisile.com/wp-content/uploads/2020/12/postman_POST.png%3Fresize%3D632.4%252C321\" alt=\"HTTP POST request header\" loading=\"lazy\"></a></p>\r\n\r\n<p>The name of the header is <code>X-CSRFToken</code>.  Set it to the value from the <code>csrftoken</code> cookie you got in the previous step. Once you have done this, you’re ready to authenticate. Hit the “Send” button and Django should now allow you to authenticate with no trouble.</p>', '2022-03-23 20:17:46', 11),
(44, 'NodeJS: How To Use The URL Module', '<h2>\r\n  <a name=\"intro\" href=\"#intro\">\r\n  </a>\r\n  Intro\r\n</h2>\r\n\r\n<p>So we <a href=\"https://dev.to/miku86/what-is-nodejs-how-to-install-it-1900\">installed NodeJS</a> on our machine.</p>\r\n\r\n<p>We also know <a href=\"https://dev.to/miku86/nodejs-how-to-run-scripts-from-the-terminal-use-arguments-2olm\">how to use commandline arguments</a>.</p>\r\n\r\n<p>Now we want to learn how to process an <code>url</code> from the commandline by using the <a href=\"https://nodejs.org/api/url.html\">URL module</a>.</p>\r\n\r\n<h2>\r\n  <a name=\"write-a-simple-script\" href=\"#write-a-simple-script\">\r\n  </a>\r\n  Write a simple script\r\n</h2>\r\n\r\n<ul>\r\n<li>Open your terminal</li>\r\n<li>Create a file named <code>index.js</code>:\r\n</li>\r\n</ul>\r\n\r\n<div class=\"highlight js-code-highlight\">\r\n<pre class=\"highlight shell\"><code><span class=\"nb\">touch </span>index.js\r\n</code></pre>\r\n<div class=\"highlight__panel js-actions-panel\">\r\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\r\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\r\n</svg>\r\n\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\r\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\r\n</svg>\r\n\r\n</div>\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n<ul>\r\n<li>Add this JavaScript code into it:\r\n</li>\r\n</ul>\r\n\r\n<div class=\"highlight js-code-highlight\">\r\n<pre class=\"highlight javascript\"><code><span class=\"kd\">const</span> <span class=\"nx\">url</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"dl\">\'</span><span class=\"s1\">url</span><span class=\"dl\">\'</span><span class=\"p\">);</span>\r\n\r\n<span class=\"kd\">const</span> <span class=\"nx\">myUrl</span> <span class=\"o\">=</span> <span class=\"nx\">process</span><span class=\"p\">.</span><span class=\"nx\">argv</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">];</span>\r\n\r\n<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">myUrl</span><span class=\"p\">)</span> <span class=\"p\">{</span>\r\n  <span class=\"kd\">const</span> <span class=\"p\">{</span> <span class=\"nx\">href</span><span class=\"p\">,</span> <span class=\"nx\">host</span><span class=\"p\">,</span> <span class=\"nx\">pathname</span><span class=\"p\">,</span> <span class=\"nx\">protocol</span> <span class=\"p\">}</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">URL</span><span class=\"p\">(</span><span class=\"nx\">myUrl</span><span class=\"p\">);</span>\r\n\r\n  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s2\">`The HREF is: </span><span class=\"p\">${</span><span class=\"nx\">href</span><span class=\"p\">}</span><span class=\"s2\">`</span><span class=\"p\">);</span>\r\n  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s2\">`The Protocol is: </span><span class=\"p\">${</span><span class=\"nx\">protocol</span><span class=\"p\">}</span><span class=\"s2\">`</span><span class=\"p\">);</span>\r\n  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s2\">`The Host is: </span><span class=\"p\">${</span><span class=\"nx\">host</span><span class=\"p\">}</span><span class=\"s2\">`</span><span class=\"p\">);</span>\r\n  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s2\">`The Pathname is: </span><span class=\"p\">${</span><span class=\"nx\">pathname</span><span class=\"p\">}</span><span class=\"s2\">`</span><span class=\"p\">);</span>\r\n<span class=\"p\">}</span>\r\n\r\n</code></pre>\r\n<div class=\"highlight__panel js-actions-panel\">\r\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\r\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\r\n</svg>\r\n\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\r\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\r\n</svg>\r\n\r\n</div>\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n<p>Note: I use the most used url properties to decrease the complexity of this simple example. To see all the available properties, read <a href=\"https://nodejs.org/api/url.html#url_url_strings_and_url_objects\">the docs of the URL module</a>.</p>\r\n\r\n\r\n<hr>\r\n\r\n<h2>\r\n  <a name=\"every-line-explained\" href=\"#every-line-explained\">\r\n  </a>\r\n  Every line explained\r\n</h2>\r\n\r\n\r\n\r\n<div class=\"highlight js-code-highlight\">\r\n<pre class=\"highlight javascript\"><code><span class=\"c1\">// import the url module</span>\r\n<span class=\"kd\">const</span> <span class=\"nx\">url</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"dl\">\'</span><span class=\"s1\">url</span><span class=\"dl\">\'</span><span class=\"p\">);</span>\r\n\r\n<span class=\"c1\">// read the third argument (= the url ) &amp; save it into a variable</span>\r\n<span class=\"kd\">const</span> <span class=\"nx\">myUrl</span> <span class=\"o\">=</span> <span class=\"nx\">process</span><span class=\"p\">.</span><span class=\"nx\">argv</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">];</span>\r\n\r\n<span class=\"c1\">// only run this block if the user inputs a third argument</span>\r\n<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">myUrl</span><span class=\"p\">)</span> <span class=\"p\">{</span>\r\n<span class=\"c1\">// destructure these specific properties from the URL</span>\r\n  <span class=\"kd\">const</span> <span class=\"p\">{</span> <span class=\"nx\">href</span><span class=\"p\">,</span> <span class=\"nx\">host</span><span class=\"p\">,</span> <span class=\"nx\">pathname</span><span class=\"p\">,</span> <span class=\"nx\">protocol</span> <span class=\"p\">}</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">URL</span><span class=\"p\">(</span><span class=\"nx\">myUrl</span><span class=\"p\">);</span>\r\n\r\n<span class=\"c1\">// log the destructured properties</span>\r\n  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s2\">`The Href is: </span><span class=\"p\">${</span><span class=\"nx\">href</span><span class=\"p\">}</span><span class=\"s2\">`</span><span class=\"p\">);</span>\r\n  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s2\">`The Protocol is: </span><span class=\"p\">${</span><span class=\"nx\">protocol</span><span class=\"p\">}</span><span class=\"s2\">`</span><span class=\"p\">);</span>\r\n  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s2\">`The Host is: </span><span class=\"p\">${</span><span class=\"nx\">host</span><span class=\"p\">}</span><span class=\"s2\">`</span><span class=\"p\">);</span>\r\n  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s2\">`The Pathname is: </span><span class=\"p\">${</span><span class=\"nx\">pathname</span><span class=\"p\">}</span><span class=\"s2\">`</span><span class=\"p\">);</span>\r\n<span class=\"p\">}</span>\r\n</code></pre>\r\n<div class=\"highlight__panel js-actions-panel\">\r\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\r\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\r\n</svg>\r\n\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\r\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\r\n</svg>\r\n\r\n</div>\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n<p>Sometimes you can see the usage of <a href=\"https://nodejs.org/api/url.html#url_url_parse_urlstring_parsequerystring_slashesdenotehost\">url.parse()</a> from the <a href=\"https://nodejs.org/api/url.html#url_legacy_url_api\">Legacy URL API</a>. The Legacy URL API is deprecated, <a href=\"https://nodejs.org/api/url.html#url_legacy_url_api\">don\'t use <code>url.parse()</code></a>, use <code>new URL()</code>.</p>\r\n\r\n\r\n<hr>\r\n\r\n<h2>\r\n  <a name=\"run-it-from-the-terminal\" href=\"#run-it-from-the-terminal\">\r\n  </a>\r\n  Run it from the terminal\r\n</h2>\r\n\r\n<ul>\r\n<li>Run it:\r\n</li>\r\n</ul>\r\n\r\n<div class=\"highlight js-code-highlight\">\r\n<pre class=\"highlight shell\"><code>node index.js https://miku86.com/articles\r\n</code></pre>\r\n<div class=\"highlight__panel js-actions-panel\">\r\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\r\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\r\n</svg>\r\n\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\r\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\r\n</svg>\r\n\r\n</div>\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n<ul>\r\n<li>Result:\r\n</li>\r\n</ul>\r\n\r\n<div class=\"highlight js-code-highlight\">\r\n<pre class=\"highlight shell\"><code>The Href is: https://miku86.com/articles\r\nThe Protocol is: https:\r\nThe Host is: miku86.com\r\nThe Pathname is: /articles\r\n</code></pre>\r\n<div class=\"highlight__panel js-actions-panel\">\r\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\r\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\r\n</svg>\r\n\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\r\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\r\n</svg>\r\n\r\n</div>\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n\r\n<hr>\r\n\r\n<h2>\r\n  <a name=\"further-reading\" href=\"#further-reading\">\r\n  </a>\r\n  Further Reading\r\n</h2>\r\n\r\n<ul>\r\n<li><a href=\"https://nodejs.org/api/url.html\">URL module</a></li>\r\n<li><a href=\"https://nodejs.org/api/url.html#url_url_strings_and_url_objects\">URL properties overview</a></li>\r\n<li><a href=\"https://nodejs.org/api/url.html#url_class_url\">URL properties explained</a></li>\r\n</ul>\r\n\r\n\r\n<hr>\r\n\r\n<h2>\r\n  <a name=\"questions\" href=\"#questions\">\r\n  </a>\r\n  Questions\r\n</h2>\r\n\r\n<ul>\r\n<li>Do you use the native <code>URL module</code> or some libraries like <a href=\"https://www.npmjs.com/package/query-string\">query-string</a>? Why do you use it?</li>\r\n</ul>', '2022-03-23 20:23:08', 12),
(45, 'Lumping together React hooks', '<p>This week at <a href=\"https://www.techtalentsouth.com/\">TTS</a>, my class is learning about React hooks. One assignemnt involved watching PedroTech\'s <a href=\"https://www.youtube.com/watch?v=LlvBzyy-558\">react hooks course</a> video and writing about three hooks.</p>\r\n\r\n<p>This article is a \"wrapper\" around that assignment. I\'ll actually discuss all 10 prebuilt hooks albeit at a shallow level. Please let me know if I got anything wrong.</p>\r\n\r\n\r\n<hr>\r\n\r\n<h2>\r\n  <a name=\"-raw-usestate-endraw-raw-usememo-endraw-and-raw-usereducer-endraw-\" href=\"#-raw-usestate-endraw-raw-usememo-endraw-and-raw-usereducer-endraw-\">\r\n  </a>\r\n  <code>useState()</code>, <code>useMemo()</code>, and <code>useReducer()</code>\r\n</h2>\r\n\r\n<p>Track state and signal DOM renders.</p>\r\n\r\n<p><a href=\"https://reactjs.org/docs/hooks-reference.html#usestate\">📝 useState()</a> signals a render whenever its state changes. Use this be default.</p>\r\n\r\n<p><a href=\"https://reactjs.org/docs/hooks-reference.html#usememo\">📝 useMemo()</a> signals a render based on other state dependencies you pass it. Use this when you want to <a href=\"https://en.wikipedia.org/wiki/Memoization\">memoize</a> expensive calculations.</p>\r\n\r\n<p><a href=\"https://reactjs.org/docs/hooks-reference.html#usecallback\">📝 useCallback()</a> signals a render based on component-level dependencies. Also use this to <a href=\"https://en.wikipedia.org/wiki/Memoization\">memoize</a> expensive calculations.</p>\r\n\r\n<p><a href=\"https://reactjs.org/docs/hooks-reference.html#usereducer\">📝 useReducer()</a> provides an API for arbitrary state-render interactions, e.g. update both state <code>x</code> and <code>y</code> when state <code>z</code> changes. Use this for \"complicated\" state-render interactions and when scaling your app is a primary concern.</p>\r\n\r\n<h2>\r\n  <a name=\"-raw-useeffect-endraw-and-raw-uselayouteffect-endraw-\" href=\"#-raw-useeffect-endraw-and-raw-uselayouteffect-endraw-\">\r\n  </a>\r\n  <code>useEffect()</code> and <code>useLayoutEffect()</code>\r\n</h2>\r\n\r\n<p>Track depencies and signal \"side-effects\" that don\'t necessarily affect the DOM.</p>\r\n\r\n<p><a href=\"https://reactjs.org/docs/hooks-reference.html#useref\">📝 useEffect()</a> activates after virtual DOM updates and DOM renders. Use this by default.</p>\r\n\r\n<p><a href=\"https://reactjs.org/docs/hooks-reference.html#uselayouteffect\">📝 useLayoutEffect()</a> activates after virtual DOM updates but before DOM renders. Use this when you want to \"measure\" DOM properties before render.</p>\r\n\r\n<h2>\r\n  <a name=\"-raw-usecontext-endraw-\" href=\"#-raw-usecontext-endraw-\">\r\n  </a>\r\n  <code>useContext()</code>\r\n</h2>\r\n\r\n<p><a href=\"https://reactjs.org/docs/hooks-reference.html#usecontext\">📝 useContext()</a> provides API for passing props down the component tree.</p>\r\n\r\n<h2>\r\n  <a name=\"-raw-useref-endraw-and-raw-useimperativehandle-endraw-\" href=\"#-raw-useref-endraw-and-raw-useimperativehandle-endraw-\">\r\n  </a>\r\n  <code>useRef()</code> and <code>useImperativeHandle()</code>\r\n</h2>\r\n\r\n<p><a href=\"https://reactjs.org/docs/hooks-reference.html#useref\">📝 useRef()</a> tracks real DOM elements. Use this to focus on input fields.</p>\r\n\r\n<p><a href=\"https://reactjs.org/docs/hooks-reference.html#useimperativehandle\">📝 useImperativeHandle()</a> provides an API for exporting the <code>useRef()</code> reference to other components. Use this when your input is spread across multiple components.</p>\r\n\r\n<h2>\r\n  <a name=\"-raw-usedebugvalue-endraw-\" href=\"#-raw-usedebugvalue-endraw-\">\r\n  </a>\r\n  <code>useDebugValue()</code>\r\n</h2>\r\n\r\n<p><a href=\"https://reactjs.org/docs/hooks-reference.html#usedebugvalue\">📝 useDebugValue()</a> provides an API for labeling custom hooks in the console output. Use this when creating a complicated custom hook.</p>\r\n\r\n<h2>\r\n  <a name=\"conclusion\" href=\"#conclusion\">\r\n  </a>\r\n  Conclusion\r\n</h2>\r\n\r\n<p>React hooks are probably difficult to \"learn\" in isolation because they likely make more sense in a concrete React app. Moreover, it seems like its more important to learn an efficient and effective workflow using many different hooks to accomplish a particular task rather than just \"learning\" an individual React hook.</p>\r\n\r\n<blockquote>\r\n<p>📑 Evan You\'s <a href=\"https://www.youtube.com/watch?v=bOdfo5SmQc8\">talk</a> at dotJS 2019 provides great context for why we even have hooks in React as well as similar ideas in other libraries/frameworks like Vue and Svelte.</p>\r\n</blockquote>\r\n\r\n\r\n<hr>\r\n\r\n<p>Banner source: <a href=\"https://www.youtube.com/watch?v=fvFO4eLp7oc&amp;t=79s\">🎥 いしわたり淳治 ＆ 砂原良徳 ＋ やくしまるえつこ「神様のいうとおり」（2010）</a></p>\r\n\r\n<p>Article source: <a href=\"https://github.com/Ai-Yukino/dev.to/tree/main/10-21-21-Thursday/1\">🐙🐱 Ai-Yukino/dev.to</a></p>', '2022-03-23 20:25:35', 10);
INSERT INTO `posts` (`id`, `title`, `content`, `created_at`, `category_id`) VALUES
(46, 'Create a fancy burger menu using reactjs-popup', '<blockquote>\r\n<p>This article is a step by step tutorial to create a simple burger menu for your website by using reactjs-popup</p>\r\n</blockquote>\r\n\r\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--N2TrZy6C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2AttcLA5BrtUAXSBo6YfoQoA.gif\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--N2TrZy6C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2AttcLA5BrtUAXSBo6YfoQoA.gif\" alt=\"\" loading=\"lazy\"></a></p>\r\n\r\n<p><a href=\"https://react-popup.netlify.com/\">Reactjs-popup</a>  is a new and simple react popup component built using react fragments which is one of the new features that comes with react 16. And it can handle multiple use cases.By using this tiny react popup component you can create  Tooltips, Modals and Menus.</p>\r\n\r\n<p>By the end of this article you will be able to create your custom burger menu with reactjs-popup.</p>\r\n\r\n<blockquote>\r\n<p>Ready!! Let’s get started.</p>\r\n</blockquote>\r\n\r\n<h4>\r\n  <a name=\"step-1-create-the-burger-icon-component\" href=\"#step-1-create-the-burger-icon-component\">\r\n  </a>\r\n  Step 1: Create the burger Icon component.\r\n</h4>\r\n\r\n<p>We will start by building a burger icon component,<br>\r\n</p>\r\n\r\n<div class=\"highlight js-code-highlight\">\r\n<pre class=\"highlight jsx\"><code><span class=\"k\">import</span> <span class=\"nx\">React</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">react</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\r\n\r\n<span class=\"k\">export</span> <span class=\"k\">default</span> <span class=\"p\">({</span> <span class=\"nx\">open</span><span class=\"p\">,</span> <span class=\"p\">...</span><span class=\"nx\">props</span> <span class=\"p\">})</span> <span class=\"o\">=&gt;</span> <span class=\"p\">(</span>\r\n  <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">className</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">open</span> <span class=\"p\">?</span> <span class=\"dl\">\"</span><span class=\"s2\">burger-menu open</span><span class=\"dl\">\"</span> <span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">burger-menu</span><span class=\"dl\">\"</span><span class=\"si\">}</span> <span class=\"si\">{</span><span class=\"p\">...</span><span class=\"nx\">props</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>\r\n    <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">className</span><span class=\"p\">=</span><span class=\"s\">\"bar1\"</span> <span class=\"na\">key</span><span class=\"p\">=</span><span class=\"s\">\"b1\"</span> <span class=\"p\">/&gt;</span>\r\n    <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">className</span><span class=\"p\">=</span><span class=\"s\">\"bar2\"</span> <span class=\"na\">key</span><span class=\"p\">=</span><span class=\"s\">\"b2\"</span> <span class=\"p\">/&gt;</span>\r\n    <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">className</span><span class=\"p\">=</span><span class=\"s\">\"bar3\"</span> <span class=\"na\">key</span><span class=\"p\">=</span><span class=\"s\">\"b3\"</span> <span class=\"p\">/&gt;</span>\r\n  <span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\r\n<span class=\"p\">);</span>\r\n</code></pre>\r\n<div class=\"highlight__panel js-actions-panel\">\r\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\r\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\r\n</svg>\r\n\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\r\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\r\n</svg>\r\n\r\n</div>\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n<p>As you see we pass the ‘open’ prop to the component so we can permute the icon class name as the preview example explains<br>\r\n<a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--xp07XFKk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://thepracticaldev.s3.amazonaws.com/i/e6vzbxy5coywxkukd4y0.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--xp07XFKk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://thepracticaldev.s3.amazonaws.com/i/e6vzbxy5coywxkukd4y0.png\" alt=\"\" loading=\"lazy\"></a><br>\r\n</p>\r\n\r\n<div class=\"highlight js-code-highlight\">\r\n<pre class=\"highlight css\"><code><span class=\"nc\">.burger-menu</span><span class=\"o\">,</span>\r\n<span class=\"nc\">.burger-menu.open</span> <span class=\"p\">{</span>\r\n  <span class=\"nl\">display</span><span class=\"p\">:</span> <span class=\"n\">inline-block</span><span class=\"p\">;</span>\r\n  <span class=\"nl\">cursor</span><span class=\"p\">:</span> <span class=\"nb\">pointer</span><span class=\"p\">;</span>\r\n  <span class=\"nl\">position</span><span class=\"p\">:</span> <span class=\"nb\">fixed</span><span class=\"p\">;</span>\r\n  <span class=\"nl\">right</span><span class=\"p\">:</span> <span class=\"m\">20px</span><span class=\"p\">;</span>\r\n  <span class=\"nl\">bottom</span><span class=\"p\">:</span> <span class=\"m\">40px</span><span class=\"p\">;</span>\r\n  <span class=\"nl\">z-index</span><span class=\"p\">:</span> <span class=\"m\">9999</span><span class=\"p\">;</span>\r\n  <span class=\"nl\">background</span><span class=\"p\">:</span> <span class=\"m\">#fff</span><span class=\"p\">;</span>\r\n  <span class=\"nl\">padding</span><span class=\"p\">:</span> <span class=\"m\">10px</span><span class=\"p\">;</span>\r\n  <span class=\"nl\">border-radius</span><span class=\"p\">:</span> <span class=\"m\">25px</span><span class=\"p\">;</span>\r\n  <span class=\"nl\">box-shadow</span><span class=\"p\">:</span> <span class=\"m\">0</span> <span class=\"m\">1px</span> <span class=\"m\">4px</span> <span class=\"n\">rgba</span><span class=\"p\">(</span><span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">0.3</span><span class=\"p\">);</span>\r\n<span class=\"p\">}</span>\r\n\r\n<span class=\"nc\">.burger-menu</span> <span class=\"nc\">.bar1</span><span class=\"o\">,</span>\r\n<span class=\"nc\">.bar2</span><span class=\"o\">,</span>\r\n<span class=\"nc\">.bar3</span> <span class=\"p\">{</span>\r\n  <span class=\"nl\">width</span><span class=\"p\">:</span> <span class=\"m\">25px</span><span class=\"p\">;</span>\r\n  <span class=\"nl\">height</span><span class=\"p\">:</span> <span class=\"m\">3px</span><span class=\"p\">;</span>\r\n  <span class=\"nl\">background-color</span><span class=\"p\">:</span> <span class=\"m\">#333</span><span class=\"p\">;</span>\r\n  <span class=\"nl\">margin</span><span class=\"p\">:</span> <span class=\"m\">4px</span> <span class=\"m\">0</span><span class=\"p\">;</span>\r\n  <span class=\"nl\">transition</span><span class=\"p\">:</span> <span class=\"m\">0.4s</span><span class=\"p\">;</span>\r\n<span class=\"p\">}</span>\r\n\r\n<span class=\"nc\">.burger-menu.open</span> <span class=\"nc\">.bar1</span> <span class=\"p\">{</span>\r\n  <span class=\"nl\">-webkit-transform</span><span class=\"p\">:</span> <span class=\"n\">rotate</span><span class=\"p\">(</span><span class=\"m\">-45deg</span><span class=\"p\">)</span> <span class=\"n\">translate</span><span class=\"p\">(</span><span class=\"m\">-4px</span><span class=\"p\">,</span> <span class=\"m\">4px</span><span class=\"p\">);</span>\r\n  <span class=\"nl\">transform</span><span class=\"p\">:</span> <span class=\"n\">rotate</span><span class=\"p\">(</span><span class=\"m\">-45deg</span><span class=\"p\">)</span> <span class=\"n\">translate</span><span class=\"p\">(</span><span class=\"m\">-4px</span><span class=\"p\">,</span> <span class=\"m\">4px</span><span class=\"p\">);</span>\r\n<span class=\"p\">}</span>\r\n\r\n<span class=\"nc\">.burger-menu.open</span> <span class=\"nc\">.bar2</span> <span class=\"p\">{</span>\r\n  <span class=\"nl\">opacity</span><span class=\"p\">:</span> <span class=\"m\">0</span><span class=\"p\">;</span>\r\n<span class=\"p\">}</span>\r\n\r\n<span class=\"nc\">.burger-menu.open</span> <span class=\"nc\">.bar3</span> <span class=\"p\">{</span>\r\n  <span class=\"nl\">-webkit-transform</span><span class=\"p\">:</span> <span class=\"n\">rotate</span><span class=\"p\">(</span><span class=\"m\">45deg</span><span class=\"p\">)</span> <span class=\"n\">translate</span><span class=\"p\">(</span><span class=\"m\">-6px</span><span class=\"p\">,</span> <span class=\"m\">-6px</span><span class=\"p\">);</span>\r\n  <span class=\"nl\">transform</span><span class=\"p\">:</span> <span class=\"n\">rotate</span><span class=\"p\">(</span><span class=\"m\">45deg</span><span class=\"p\">)</span> <span class=\"n\">translate</span><span class=\"p\">(</span><span class=\"m\">-6px</span><span class=\"p\">,</span> <span class=\"m\">-6px</span><span class=\"p\">);</span>\r\n<span class=\"p\">}</span>\r\n</code></pre>\r\n<div class=\"highlight__panel js-actions-panel\">\r\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\r\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\r\n</svg>\r\n\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\r\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\r\n</svg>\r\n\r\n</div>\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n<p>You can find some good examples for burger icon with animation  <a href=\"https://jonsuh.com/hamburgers/\">here</a></p>\r\n\r\n<h4>\r\n  <a name=\"step-2-customize-css-menu\" href=\"#step-2-customize-css-menu\">\r\n  </a>\r\n  Step 2: Customize CSS Menu\r\n</h4>\r\n\r\n<p>Our menu will be a simple list, so let’s take the reactjs-popup home page menu and use it as an example.<br>\r\n</p>\r\n\r\n<div class=\"highlight js-code-highlight\">\r\n<pre class=\"highlight jsx\"><code><span class=\"k\">import</span> <span class=\"nx\">React</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">react</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\r\n\r\n<span class=\"k\">export</span> <span class=\"k\">default</span> <span class=\"p\">({</span> <span class=\"nx\">close</span> <span class=\"p\">})</span> <span class=\"o\">=&gt;</span> <span class=\"p\">(</span>\r\n  <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">className</span><span class=\"p\">=</span><span class=\"s\">\"menu\"</span><span class=\"p\">&gt;</span>\r\n    <span class=\"p\">&lt;</span><span class=\"nt\">ul</span><span class=\"p\">&gt;</span>\r\n      <span class=\"p\">&lt;</span><span class=\"nt\">li</span> <span class=\"na\">onClick</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">close</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>Home<span class=\"p\">&lt;/</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>\r\n      <span class=\"p\">&lt;</span><span class=\"nt\">li</span> <span class=\"na\">onClick</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">close</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>Getting Started<span class=\"p\">&lt;/</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>\r\n      <span class=\"p\">&lt;</span><span class=\"nt\">li</span> <span class=\"na\">onClick</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">close</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>Component API<span class=\"p\">&lt;/</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>\r\n      <span class=\"p\">&lt;</span><span class=\"nt\">li</span> <span class=\"na\">onClick</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">close</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>Use Case - Tooltip<span class=\"p\">&lt;/</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>\r\n      <span class=\"p\">&lt;</span><span class=\"nt\">li</span> <span class=\"na\">onClick</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">close</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>Use Case - Modal<span class=\"p\">&lt;/</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>\r\n      <span class=\"p\">&lt;</span><span class=\"nt\">li</span> <span class=\"na\">onClick</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">close</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>Use Case - Menu<span class=\"p\">&lt;/</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>\r\n      <span class=\"p\">&lt;</span><span class=\"nt\">li</span> <span class=\"na\">onClick</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">close</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>Contributing<span class=\"p\">&lt;/</span><span class=\"nt\">li</span><span class=\"p\">&gt;</span>\r\n    <span class=\"p\">&lt;/</span><span class=\"nt\">ul</span><span class=\"p\">&gt;</span>\r\n  <span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\r\n<span class=\"p\">);</span>\r\n</code></pre>\r\n<div class=\"highlight__panel js-actions-panel\">\r\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\r\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\r\n</svg>\r\n\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\r\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\r\n</svg>\r\n\r\n</div>\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n<p>As you see this menu is a simple ul element, nothing special.</p>\r\n\r\n<h2>\r\n  <a name=\"step-3integrate-all-stuff-with-reactjspopup\" href=\"#step-3integrate-all-stuff-with-reactjspopup\">\r\n  </a>\r\n  Step 3:integrate all stuff with reactjs-popup\r\n</h2>\r\n\r\n<p>All we need to do in this part is to import the reactjs-popup component and set the burger menu as a trigger prop for the popup component and the menu as the popup children. simple, is it ? magic !!<br>\r\n</p>\r\n\r\n<div class=\"highlight js-code-highlight\">\r\n<pre class=\"highlight jsx\"><code><span class=\"k\">import</span> <span class=\"nx\">React</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">react</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\r\n<span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">render</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">react-dom</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\r\n<span class=\"k\">import</span> <span class=\"nx\">Popup</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">reactjs-popup</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\r\n<span class=\"k\">import</span> <span class=\"nx\">BurgerIcon</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">./BurgerIcon</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\r\n<span class=\"k\">import</span> <span class=\"nx\">Menu</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">./Menu</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\r\n<span class=\"k\">import</span> <span class=\"dl\">\"</span><span class=\"s2\">./index.css</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\r\n\r\n<span class=\"kd\">const</span> <span class=\"nx\">App</span> <span class=\"o\">=</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">(</span>\r\n  <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">styles</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>\r\n    <span class=\"p\">&lt;</span><span class=\"nc\">Hello</span> <span class=\"na\">name</span><span class=\"p\">=</span><span class=\"s\">\"Create cool burger menu using reactjs-popup\"</span> <span class=\"p\">/&gt;</span>\r\n    <span class=\"p\">&lt;</span><span class=\"nc\">Popup</span>\r\n      <span class=\"na\">modal</span>\r\n      <span class=\"na\">overlayStyle</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"p\">{</span> <span class=\"na\">background</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">rgba(255,255,255,0.98</span><span class=\"dl\">\"</span> <span class=\"p\">}</span><span class=\"si\">}</span>\r\n      <span class=\"na\">contentStyle</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">contentStyle</span><span class=\"si\">}</span>\r\n      <span class=\"na\">closeOnDocumentClick</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"kc\">false</span><span class=\"si\">}</span>\r\n      <span class=\"na\">trigger</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">open</span> <span class=\"o\">=&gt;</span> <span class=\"p\">&lt;</span><span class=\"nc\">BurgerIcon</span> <span class=\"na\">open</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">open</span><span class=\"si\">}</span> <span class=\"p\">/&gt;</span><span class=\"si\">}</span>\r\n    <span class=\"p\">&gt;</span>\r\n      <span class=\"si\">{</span><span class=\"nx\">close</span> <span class=\"o\">=&gt;</span> <span class=\"p\">&lt;</span><span class=\"nc\">Menu</span> <span class=\"na\">close</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">close</span><span class=\"si\">}</span> <span class=\"p\">/&gt;</span><span class=\"si\">}</span>\r\n    <span class=\"p\">&lt;/</span><span class=\"nc\">Popup</span><span class=\"p\">&gt;</span>\r\n  <span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\r\n<span class=\"p\">);</span>\r\n\r\n<span class=\"nx\">render</span><span class=\"p\">(&lt;</span><span class=\"nc\">App</span> <span class=\"p\">/&gt;,</span> <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">getElementById</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">root</span><span class=\"dl\">\"</span><span class=\"p\">));</span>\r\n</code></pre>\r\n<div class=\"highlight__panel js-actions-panel\">\r\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\r\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\r\n</svg>\r\n\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\r\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\r\n</svg>\r\n\r\n</div>\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n<p>Thanks to the ‘function as a children pattern’ the trigger can access to the popup state easily. we need also to pass props to the burger component like the following.</p>\r\n\r\n<p>Adding some custom css and this is the final result.</p>\r\n\r\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--N2TrZy6C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2AttcLA5BrtUAXSBo6YfoQoA.gif\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--N2TrZy6C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2AttcLA5BrtUAXSBo6YfoQoA.gif\" alt=\"\" loading=\"lazy\"></a></p>\r\n\r\n<p>If you read this article from your smartphone , you can see the burger button to launch the menu in <a href=\"https://react-popup.netlify.com/\">reactjs-popup home page.</a></p>\r\n\r\n<h2>\r\n  <a name=\"demo-amp-code-source\" href=\"#demo-amp-code-source\">\r\n  </a>\r\n  Demo  &amp; Code source\r\n</h2>\r\n\r\n<p><a href=\"https://codesandbox.io/s/k2x7l5jy27\">https://codesandbox.io/s/k2x7l5jy27</a></p>\r\n\r\n<p><a href=\"https://github.com/yjose/reactjs-popup-burger-menu\">https://github.com/yjose/reactjs-popup-burger-menu</a></p>\r\n\r\n<p>Thanks for reading! If you think other people should read this post and use this component,tweet and share the post.</p>', '2022-03-23 20:27:32', 10);
INSERT INTO `posts` (`id`, `title`, `content`, `created_at`, `category_id`) VALUES
(47, 'How to Find Duplicate Values in SQL', '<p style=\"box-sizing: border-box; color: rgb(45, 45, 45); font-family: oxygen, sans-serif; font-size: 18px;\"><em style=\"box-sizing: border-box;\">Duplicate records waste time, space, and money. Learn how to find and fix duplicate values using SQL&rsquo;s GROUP BY and HAVING clauses.</em></p>\r\n\r\n<p style=\"box-sizing: border-box; color: rgb(45, 45, 45); font-family: oxygen, sans-serif; font-size: 18px;\">Database best practices usually dictate having unique constraints (such as the primary key) on a table to prevent the duplication of rows when data is extracted and consolidated. However, you may find yourself working on a dataset with duplicate rows. This could be because of human error, an application bug, or uncleaned data that&rsquo;s been extracted and merged from external sources, among other things.</p>\r\n\r\n<p style=\"box-sizing: border-box; color: rgb(45, 45, 45); font-family: oxygen, sans-serif; font-size: 18px;\">Why fix duplicate values? They can mess up calculations. They can even cost the company money; for example, an e-commerce business might process duplicated customer orders multiple times, which can have a direct impact on the business&rsquo;s bottom line.</p>\r\n\r\n<h2 style=\"box-sizing: border-box; font-size: 44px; color: rgb(0, 0, 0); font-weight: 700; line-height: initial; font-family: oxygen, sans-serif;\">How to Find Duplicate Values in SQL</h2>\r\n\r\n<p style=\"box-sizing: border-box; color: rgb(45, 45, 45); font-family: oxygen, sans-serif; font-size: 18px;\">First, you will need to define the criteria for detecting duplicate rows. Is it a combination of two or more columns where you want to detect duplicate values, or are you simply searching for duplicates within a single column?</p>\r\n\r\n<p style=\"box-sizing: border-box; color: rgb(45, 45, 45); font-family: oxygen, sans-serif; font-size: 18px;\">In the examples below, we will be exploring both these scenarios using a simple customer order database.</p>\r\n\r\n<p style=\"box-sizing: border-box; color: rgb(45, 45, 45); font-family: oxygen, sans-serif; font-size: 18px;\">In terms of the general approach for either scenario, finding duplicates values in SQL comprises two key steps:</p>\r\n\r\n<ol style=\"box-sizing: border-box; color: rgb(45, 45, 45); font-family: oxygen, sans-serif; font-size: 18px;\">\r\n	<li style=\"box-sizing: border-box;\">Using the&nbsp;<code style=\"box-sizing: border-box; border-radius: 2px; padding: 2px 8px; background-color: rgb(238, 245, 255); color: rgb(68, 36, 169); font-family: &quot;fira code&quot;, monospace; font-size: 14px;\">GROUP BY</code>&nbsp;clause to group all rows by the target column(s) &ndash; i.e. the column(s) you want to check for duplicate values on.</li>\r\n	<li style=\"box-sizing: border-box;\">Using the&nbsp;<code style=\"box-sizing: border-box; border-radius: 2px; padding: 2px 8px; background-color: rgb(238, 245, 255); color: rgb(68, 36, 169); font-family: &quot;fira code&quot;, monospace; font-size: 14px;\">COUNT</code>&nbsp;function in the HAVING clause to check if any of the groups have more than 1 entry; those would be the duplicate values.</li>\r\n</ol>\r\n\r\n<p style=\"box-sizing: border-box; color: rgb(45, 45, 45); font-family: oxygen, sans-serif; font-size: 18px;\">For a quick visual refresher on&nbsp;<code style=\"box-sizing: border-box; border-radius: 2px; padding: 2px 8px; background-color: rgb(238, 245, 255); color: rgb(68, 36, 169); font-family: &quot;fira code&quot;, monospace; font-size: 14px;\">GROUP BY</code>, check out our We Learn SQL Series&rsquo;&nbsp;<a href=\"https://www.youtube.com/watch?v=guJAF0NMHII\" style=\"box-sizing: border-box; text-decoration-line: none; color: rgb(0, 109, 255);\" target=\"_blank\" title=\"We Learn SQL #6 | SQL GROUP BY\">SQL GROUP BY video</a>. Our&nbsp;<a href=\"https://learnsql.com/course/sql-practice-set\" style=\"box-sizing: border-box; text-decoration-line: none; color: rgb(0, 109, 255);\" target=\"_blank\" title=\"SQL Practice Set - SQL online course | LearnSQL.com\">SQL Practice Set</a>&nbsp;course offers over 80 hands-on SQL exercises to practice these concepts in great detail.</p>\r\n\r\n<h3 style=\"box-sizing: border-box; font-size: 35px; font-weight: 700; color: rgb(0, 0, 0); line-height: initial; margin-top: 60px; margin-bottom: 30px; font-family: oxygen, sans-serif;\">Duplicate Values in One Column</h3>\r\n\r\n<p style=\"box-sizing: border-box; color: rgb(45, 45, 45); font-family: oxygen, sans-serif; font-size: 18px;\">Here, we will be demonstrating how you can find duplicate values in a single column. For this example, we will be using the Orders table, a modified version of the table we used in my previous article on&nbsp;<a href=\"https://learnsql.com/blog/what-is-group-by-in-sql/\" style=\"box-sizing: border-box; text-decoration-line: none; color: rgb(0, 109, 255);\" target=\"_blank\" title=\"Using GROUP BY in SQL |   LearnSQL.com\">using GROUP BY in SQL</a>. A sample of the table is shown below.</p>\r\n\r\n<table cellspacing=\"0\" style=\"width: fit-content; margin-bottom: 20px; font-size: 14px; background-color: transparent; border: 1px solid rgb(237, 237, 237); color: rgb(0, 0, 0); border-radius: 3px; overflow-x: auto; display: block; font-family: oxygen, sans-serif;\" summary=\"\">\r\n	<thead style=\"box-sizing: border-box;\">\r\n		<tr style=\"box-sizing: border-box; border-radius: 3px; font-size: 15px;\">\r\n			<th style=\"box-sizing: border-box; line-height: 20px; text-align: left; padding: 10px 70px 10px 20px; background-color: rgb(1, 109, 255); border-top-left-radius: 3px;\">OrderID</th>\r\n			<th style=\"box-sizing: border-box; line-height: 20px; text-align: left; padding: 10px 70px 10px 20px; background-color: rgb(1, 109, 255); border-left: 1px solid rgb(237, 237, 237);\">CustomerID</th>\r\n			<th style=\"box-sizing: border-box; line-height: 20px; text-align: left; padding: 10px 70px 10px 20px; background-color: rgb(1, 109, 255); border-left: 1px solid rgb(237, 237, 237);\">EmployeeID</th>\r\n			<th style=\"box-sizing: border-box; line-height: 20px; text-align: left; padding: 10px 70px 10px 20px; background-color: rgb(1, 109, 255); border-left: 1px solid rgb(237, 237, 237);\">OrderDate</th>\r\n			<th style=\"box-sizing: border-box; line-height: 20px; text-align: left; padding: 10px 70px 10px 20px; background-color: rgb(1, 109, 255); border-left: 1px solid rgb(237, 237, 237); border-top-right-radius: 3px;\">ShipperID</th>\r\n		</tr>\r\n	</thead>\r\n	<tfoot style=\"box-sizing: border-box;\">\r\n	</tfoot>\r\n	<tbody style=\"box-sizing: border-box;\">\r\n		<tr style=\"box-sizing: border-box; border-radius: 3px;\">\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-radius: 3px 0px 0px 3px;\">10248</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-left: 1px solid rgb(237, 237, 237);\">90</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-left: 1px solid rgb(237, 237, 237);\">5</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-left: 1px solid rgb(237, 237, 237);\">1996-07-04</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-left: 1px solid rgb(237, 237, 237); border-radius: 0px 3px 3px 0px;\">3</td>\r\n		</tr>\r\n		<tr style=\"box-sizing: border-box; border-radius: 3px; background-color: rgb(248, 248, 248);\">\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-radius: 3px 0px 0px 3px;\">10249</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-left: 1px solid rgb(237, 237, 237);\">81</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-left: 1px solid rgb(237, 237, 237);\">6</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-left: 1px solid rgb(237, 237, 237);\">1996-07-05</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-left: 1px solid rgb(237, 237, 237); border-radius: 0px 3px 3px 0px;\">1</td>\r\n		</tr>\r\n		<tr style=\"box-sizing: border-box; border-radius: 3px;\">\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-radius: 3px 0px 0px 3px;\">10250</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-left: 1px solid rgb(237, 237, 237);\">34</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-left: 1px solid rgb(237, 237, 237);\">4</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-left: 1px solid rgb(237, 237, 237);\">1996-07-08</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-left: 1px solid rgb(237, 237, 237); border-radius: 0px 3px 3px 0px;\">2</td>\r\n		</tr>\r\n		<tr style=\"box-sizing: border-box; border-radius: 3px; background-color: rgb(248, 248, 248);\">\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-radius: 3px 0px 0px 3px;\">10251</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-left: 1px solid rgb(237, 237, 237);\">84</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-left: 1px solid rgb(237, 237, 237);\">3</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-left: 1px solid rgb(237, 237, 237);\">1996-07-08</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-left: 1px solid rgb(237, 237, 237); border-radius: 0px 3px 3px 0px;\">1</td>\r\n		</tr>\r\n		<tr style=\"box-sizing: border-box; border-radius: 3px;\">\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-radius: 3px 0px 0px 3px;\">10251</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-left: 1px solid rgb(237, 237, 237);\">84</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-left: 1px solid rgb(237, 237, 237);\">3</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-left: 1px solid rgb(237, 237, 237);\">1996-07-08</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-left: 1px solid rgb(237, 237, 237); border-radius: 0px 3px 3px 0px;\">1</td>\r\n		</tr>\r\n		<tr style=\"box-sizing: border-box; border-radius: 3px; background-color: rgb(248, 248, 248);\">\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-radius: 3px 0px 0px 3px;\">10252</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-left: 1px solid rgb(237, 237, 237);\">76</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-left: 1px solid rgb(237, 237, 237);\">4</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-left: 1px solid rgb(237, 237, 237);\">1996-07-09</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-left: 1px solid rgb(237, 237, 237); border-radius: 0px 3px 3px 0px;\">2</td>\r\n		</tr>\r\n		<tr style=\"box-sizing: border-box; border-radius: 3px;\">\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-radius: 3px 0px 0px 3px;\">&hellip;</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-left: 1px solid rgb(237, 237, 237);\">&hellip;</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-left: 1px solid rgb(237, 237, 237);\">&hellip;</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-left: 1px solid rgb(237, 237, 237);\">&hellip;</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-left: 1px solid rgb(237, 237, 237); border-radius: 0px 3px 3px 0px;\">&hellip;</td>\r\n		</tr>\r\n		<tr style=\"box-sizing: border-box; border-radius: 3px; background-color: rgb(248, 248, 248);\">\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: none; border-radius: 3px 0px 0px 3px;\">10443</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: none; border-left: 1px solid rgb(237, 237, 237);\">66</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: none; border-left: 1px solid rgb(237, 237, 237);\">8</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: none; border-left: 1px solid rgb(237, 237, 237);\">1997-02-12</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: none; border-left: 1px solid rgb(237, 237, 237); border-radius: 0px 3px 3px 0px;\">1</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p style=\"box-sizing: border-box; color: rgb(45, 45, 45); font-family: oxygen, sans-serif; font-size: 18px;\">In this example, there are a few duplicates in the&nbsp;<code style=\"box-sizing: border-box; border-radius: 2px; padding: 2px 8px; background-color: rgb(238, 245, 255); color: rgb(68, 36, 169); font-family: &quot;fira code&quot;, monospace; font-size: 14px;\">OrderID</code>&nbsp;column. Ideally, each row should have a unique value for&nbsp;<code style=\"box-sizing: border-box; border-radius: 2px; padding: 2px 8px; background-color: rgb(238, 245, 255); color: rgb(68, 36, 169); font-family: &quot;fira code&quot;, monospace; font-size: 14px;\">OrderID</code>, since each individual order is assigned its own value. For some reason, that wasn&rsquo;t implemented here. To find the duplicates, we can use the following query:</p>\r\n\r\n<div style=\"box-sizing: border-box; color: rgb(45, 45, 45); font-family: oxygen, sans-serif; font-size: 18px;\">\r\n<div class=\"syntaxhighlighter nogutter  sql\" id=\"highlighter_781495\" style=\"box-sizing: border-box; position: relative;\">\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"width: 700px; margin-bottom: 20px; font-size: 14px; background-color: transparent; border: 1px solid rgb(237, 237, 237); color: rgb(0, 0, 0); border-radius: 0px 4px 4px; overflow-x: auto; display: block; font-family: &quot;fira code&quot;, monospace; padding: 30px 0px 32px 16px;\">\r\n	<tbody style=\"box-sizing: border-box; padding: 0px;\">\r\n		<tr style=\"box-sizing: border-box; border-radius: 3px; padding: 0px;\">\r\n			<td class=\"code\" style=\"box-sizing: border-box; line-height: 20px; padding: 0px; font-size: 15px; border-bottom: none; border-radius: 0px 3px 3px;\">\r\n			<div class=\"container\" style=\"box-sizing: border-box; margin-right: auto; margin-left: auto; padding: 0px; width: fit-content;\">\r\n			<div class=\"line number1 index0 alt2\" style=\"box-sizing: border-box; padding: 0px;\"><code class=\"sql keyword\" style=\"box-sizing: border-box; border-radius: 2px; padding: 0px; background: inherit; color: rgb(68, 36, 169); font-family: &quot;fira code&quot;, monospace; font-size: 14px;\">SELECT</code>&nbsp;<code class=\"sql plain\" style=\"box-sizing: border-box; border-radius: 2px; padding: 0px; background: inherit; font-family: &quot;fira code&quot;, monospace; font-size: 14px;\">OrderID,&nbsp;</code><code class=\"sql color2\" style=\"box-sizing: border-box; border-radius: 2px; padding: 0px; background: inherit; color: rgb(68, 36, 169); font-family: &quot;fira code&quot;, monospace; font-size: 14px;\">COUNT</code><code class=\"sql plain\" style=\"box-sizing: border-box; border-radius: 2px; padding: 0px; background: inherit; font-family: &quot;fira code&quot;, monospace; font-size: 14px;\">(OrderID)</code></div>\r\n\r\n			<div class=\"line number2 index1 alt1\" style=\"box-sizing: border-box; padding: 0px;\"><code class=\"sql keyword\" style=\"box-sizing: border-box; border-radius: 2px; padding: 0px; background: inherit; color: rgb(68, 36, 169); font-family: &quot;fira code&quot;, monospace; font-size: 14px;\">FROM</code>&nbsp;<code class=\"sql plain\" style=\"box-sizing: border-box; border-radius: 2px; padding: 0px; background: inherit; font-family: &quot;fira code&quot;, monospace; font-size: 14px;\">Orders</code></div>\r\n\r\n			<div class=\"line number3 index2 alt2\" style=\"box-sizing: border-box; padding: 0px;\"><code class=\"sql keyword\" style=\"box-sizing: border-box; border-radius: 2px; padding: 0px; background: inherit; color: rgb(68, 36, 169); font-family: &quot;fira code&quot;, monospace; font-size: 14px;\">GROUP</code>&nbsp;<code class=\"sql keyword\" style=\"box-sizing: border-box; border-radius: 2px; padding: 0px; background: inherit; color: rgb(68, 36, 169); font-family: &quot;fira code&quot;, monospace; font-size: 14px;\">BY</code>&nbsp;<code class=\"sql plain\" style=\"box-sizing: border-box; border-radius: 2px; padding: 0px; background: inherit; font-family: &quot;fira code&quot;, monospace; font-size: 14px;\">OrderID</code></div>\r\n\r\n			<div class=\"line number4 index3 alt1\" style=\"box-sizing: border-box; padding: 0px;\"><code class=\"sql keyword\" style=\"box-sizing: border-box; border-radius: 2px; padding: 0px; background: inherit; color: rgb(68, 36, 169); font-family: &quot;fira code&quot;, monospace; font-size: 14px;\">HAVING</code>&nbsp;<code class=\"sql color2\" style=\"box-sizing: border-box; border-radius: 2px; padding: 0px; background: inherit; color: rgb(68, 36, 169); font-family: &quot;fira code&quot;, monospace; font-size: 14px;\">COUNT</code><code class=\"sql plain\" style=\"box-sizing: border-box; border-radius: 2px; padding: 0px; background: inherit; font-family: &quot;fira code&quot;, monospace; font-size: 14px;\">(OrderID)&gt;1</code></div>\r\n			</div>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n\r\n<h4 style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-weight: 700; line-height: initial; font-family: oxygen, sans-serif; font-size: 18px;\">RESULT</h4>\r\n\r\n<p style=\"box-sizing: border-box; color: rgb(45, 45, 45); font-family: oxygen, sans-serif; font-size: 18px;\">Number of Records: 2</p>\r\n\r\n<table cellspacing=\"0\" style=\"width: fit-content; margin-bottom: 20px; font-size: 14px; background-color: transparent; border: 1px solid rgb(237, 237, 237); color: rgb(0, 0, 0); border-radius: 3px; overflow-x: auto; display: block; font-family: oxygen, sans-serif;\" summary=\"\">\r\n	<thead style=\"box-sizing: border-box;\">\r\n		<tr style=\"box-sizing: border-box; border-radius: 3px; font-size: 15px;\">\r\n			<th style=\"box-sizing: border-box; line-height: 20px; text-align: left; padding: 10px 70px 10px 20px; background-color: rgb(1, 109, 255); border-top-left-radius: 3px;\">OrderID</th>\r\n			<th style=\"box-sizing: border-box; line-height: 20px; text-align: left; padding: 10px 70px 10px 20px; background-color: rgb(1, 109, 255); border-left: 1px solid rgb(237, 237, 237); border-top-right-radius: 3px;\">COUNT(OrderID)</th>\r\n		</tr>\r\n	</thead>\r\n	<tfoot style=\"box-sizing: border-box;\">\r\n	</tfoot>\r\n	<tbody style=\"box-sizing: border-box;\">\r\n		<tr style=\"box-sizing: border-box; border-radius: 3px;\">\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-radius: 3px 0px 0px 3px;\">10251</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-left: 1px solid rgb(237, 237, 237); border-radius: 0px 3px 3px 0px;\">2</td>\r\n		</tr>\r\n		<tr style=\"box-sizing: border-box; border-radius: 3px; background-color: rgb(248, 248, 248);\">\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: none; border-radius: 3px 0px 0px 3px;\">10276</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: none; border-left: 1px solid rgb(237, 237, 237); border-radius: 0px 3px 3px 0px;\">2</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p style=\"box-sizing: border-box; color: rgb(45, 45, 45); font-family: oxygen, sans-serif; font-size: 18px;\">As we can see,&nbsp;<code style=\"box-sizing: border-box; border-radius: 2px; padding: 2px 8px; background-color: rgb(238, 245, 255); color: rgb(68, 36, 169); font-family: &quot;fira code&quot;, monospace; font-size: 14px;\">OrderID</code>&nbsp;10251 (which we saw in the table sample above) and&nbsp;<code style=\"box-sizing: border-box; border-radius: 2px; padding: 2px 8px; background-color: rgb(238, 245, 255); color: rgb(68, 36, 169); font-family: &quot;fira code&quot;, monospace; font-size: 14px;\">OrderID</code>&nbsp;10276 have duplicates.</p>\r\n\r\n<p style=\"box-sizing: border-box; color: rgb(45, 45, 45); font-family: oxygen, sans-serif; font-size: 18px;\">Using the&nbsp;<code style=\"box-sizing: border-box; border-radius: 2px; padding: 2px 8px; background-color: rgb(238, 245, 255); color: rgb(68, 36, 169); font-family: &quot;fira code&quot;, monospace; font-size: 14px;\">GROUP BY</code>&nbsp;and&nbsp;<code style=\"box-sizing: border-box; border-radius: 2px; padding: 2px 8px; background-color: rgb(238, 245, 255); color: rgb(68, 36, 169); font-family: &quot;fira code&quot;, monospace; font-size: 14px;\">HAVING</code>&nbsp;clauses can neatly show the duplicates in your data. Once you have validated that the rows are the same, you may choose to remove the duplicate(s) using the&nbsp;<code style=\"box-sizing: border-box; border-radius: 2px; padding: 2px 8px; background-color: rgb(238, 245, 255); color: rgb(68, 36, 169); font-family: &quot;fira code&quot;, monospace; font-size: 14px;\"><a href=\"https://learnsql.com/blog/sql-insert-sql-update-sql-delete-oh-my/\" style=\"box-sizing: border-box; text-decoration-line: none; color: rgb(0, 109, 255);\" target=\"_blank\" title=\"SQL INSERT, SQL UPDATE, SQL DELETE – Oh My! |   LearnSQL.com\">DELETE</a></code>&nbsp;statement.</p>\r\n\r\n<h3 style=\"box-sizing: border-box; font-size: 35px; font-weight: 700; color: rgb(0, 0, 0); line-height: initial; margin-top: 60px; margin-bottom: 30px; font-family: oxygen, sans-serif;\">Duplicate Values in Multiple Columns</h3>\r\n\r\n<p style=\"box-sizing: border-box; color: rgb(45, 45, 45); font-family: oxygen, sans-serif; font-size: 18px;\">Often, you&rsquo;re interested in finding rows where a combination of a few columns match. For this example, we will be using the&nbsp;<code style=\"box-sizing: border-box; border-radius: 2px; padding: 2px 8px; background-color: rgb(238, 245, 255); color: rgb(68, 36, 169); font-family: &quot;fira code&quot;, monospace; font-size: 14px;\"><strong style=\"box-sizing: border-box;\">OrderDetails</strong></code>&nbsp;table, a sample of which is shown below.</p>\r\n\r\n<table cellspacing=\"0\" style=\"width: fit-content; margin-bottom: 20px; font-size: 14px; background-color: transparent; border: 1px solid rgb(237, 237, 237); color: rgb(0, 0, 0); border-radius: 3px; overflow-x: auto; display: block; font-family: oxygen, sans-serif;\" summary=\"\">\r\n	<thead style=\"box-sizing: border-box;\">\r\n		<tr style=\"box-sizing: border-box; border-radius: 3px; font-size: 15px;\">\r\n			<th style=\"box-sizing: border-box; line-height: 20px; text-align: left; padding: 10px 70px 10px 20px; background-color: rgb(1, 109, 255); border-top-left-radius: 3px;\">OrderDetailID</th>\r\n			<th style=\"box-sizing: border-box; line-height: 20px; text-align: left; padding: 10px 70px 10px 20px; background-color: rgb(1, 109, 255); border-left: 1px solid rgb(237, 237, 237);\">OrderID</th>\r\n			<th style=\"box-sizing: border-box; line-height: 20px; text-align: left; padding: 10px 70px 10px 20px; background-color: rgb(1, 109, 255); border-left: 1px solid rgb(237, 237, 237);\">ProductID</th>\r\n			<th style=\"box-sizing: border-box; line-height: 20px; text-align: left; padding: 10px 70px 10px 20px; background-color: rgb(1, 109, 255); border-left: 1px solid rgb(237, 237, 237); border-top-right-radius: 3px;\">Quantity</th>\r\n		</tr>\r\n	</thead>\r\n	<tfoot style=\"box-sizing: border-box;\">\r\n	</tfoot>\r\n	<tbody style=\"box-sizing: border-box;\">\r\n		<tr style=\"box-sizing: border-box; border-radius: 3px;\">\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-radius: 3px 0px 0px 3px;\">1</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-left: 1px solid rgb(237, 237, 237);\">10248</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-left: 1px solid rgb(237, 237, 237);\">11</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-left: 1px solid rgb(237, 237, 237); border-radius: 0px 3px 3px 0px;\">12</td>\r\n		</tr>\r\n		<tr style=\"box-sizing: border-box; border-radius: 3px; background-color: rgb(248, 248, 248);\">\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-radius: 3px 0px 0px 3px;\">2</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-left: 1px solid rgb(237, 237, 237);\">10248</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-left: 1px solid rgb(237, 237, 237);\">42</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-left: 1px solid rgb(237, 237, 237); border-radius: 0px 3px 3px 0px;\">10</td>\r\n		</tr>\r\n		<tr style=\"box-sizing: border-box; border-radius: 3px;\">\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-radius: 3px 0px 0px 3px;\">3</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-left: 1px solid rgb(237, 237, 237);\">10248</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-left: 1px solid rgb(237, 237, 237);\">72</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-left: 1px solid rgb(237, 237, 237); border-radius: 0px 3px 3px 0px;\">5</td>\r\n		</tr>\r\n		<tr style=\"box-sizing: border-box; border-radius: 3px; background-color: rgb(248, 248, 248);\">\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-radius: 3px 0px 0px 3px;\">4</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-left: 1px solid rgb(237, 237, 237);\">10249</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-left: 1px solid rgb(237, 237, 237);\">14</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-left: 1px solid rgb(237, 237, 237); border-radius: 0px 3px 3px 0px;\">9</td>\r\n		</tr>\r\n		<tr style=\"box-sizing: border-box; border-radius: 3px;\">\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-radius: 3px 0px 0px 3px;\">5</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-left: 1px solid rgb(237, 237, 237);\">10249</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-left: 1px solid rgb(237, 237, 237);\">14</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-left: 1px solid rgb(237, 237, 237); border-radius: 0px 3px 3px 0px;\">2</td>\r\n		</tr>\r\n		<tr style=\"box-sizing: border-box; border-radius: 3px; background-color: rgb(248, 248, 248);\">\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-radius: 3px 0px 0px 3px;\">6</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-left: 1px solid rgb(237, 237, 237);\">10249</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-left: 1px solid rgb(237, 237, 237);\">51</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-left: 1px solid rgb(237, 237, 237); border-radius: 0px 3px 3px 0px;\">40</td>\r\n		</tr>\r\n		<tr style=\"box-sizing: border-box; border-radius: 3px;\">\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-radius: 3px 0px 0px 3px;\">&hellip;</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-left: 1px solid rgb(237, 237, 237);\">&hellip;</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-left: 1px solid rgb(237, 237, 237);\">&hellip;</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: 1px solid rgb(237, 237, 237); border-left: 1px solid rgb(237, 237, 237); border-radius: 0px 3px 3px 0px;\">&hellip;</td>\r\n		</tr>\r\n		<tr style=\"box-sizing: border-box; border-radius: 3px; background-color: rgb(248, 248, 248);\">\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: none; border-radius: 3px 0px 0px 3px;\">520</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: none; border-left: 1px solid rgb(237, 237, 237);\">10443</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: none; border-left: 1px solid rgb(237, 237, 237);\">28</td>\r\n			<td style=\"box-sizing: border-box; line-height: 20px; padding: 10px 70px 10px 20px; font-size: 15px; border-bottom: none; border-left: 1px solid rgb(237, 237, 237); border-radius: 0px 3px 3px 0px;\">12</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p style=\"box-sizing: border-box; color: rgb(45, 45, 45); font-family: oxygen, sans-serif; font-size: 18px;\">We want to find entries where the&nbsp;<code style=\"box-sizing: border-box; border-radius: 2px; padding: 2px 8px; background-color: rgb(238, 245, 255); color: rgb(68, 36, 169); font-family: &quot;fira code&quot;, monospace; font-size: 14px;\">OrderID</code>&nbsp;and&nbsp;<code style=\"box-sizing: border-box; border-radius: 2px; padding: 2px 8px; background-color: rgb(238, 245, 255); color: rgb(68, 36, 169); font-family: &quot;fira code&quot;, monospace; font-size: 14px;\">ProductID</code>&nbsp;columns are identical. This type of duplicate likely means there is a bug in the ordering system, since each order will process each product in that order only once in the cart. If multiple quantities of that product are ordered, the&nbsp;<code style=\"box-sizing: border-box; border-radius: 2px; padding: 2px 8px; background-color: rgb(238, 245, 255); color: rgb(68, 36, 169); font-family: &quot;fira code&quot;, monospace; font-size: 14px;\">Quantity</code>&nbsp;value would simply be increased; separate (duplicate) rows should not be created. A glitch of this type may impact business operations negatively if the orders are being fulfilled, packaged, and shipped automatically.</p>\r\n\r\n<p style=\"box-sizing: border-box; color: rgb(45, 45, 45); font-family: oxygen, sans-serif; font-size: 18px;\">To find duplicates in multiple column values, we can use the following query. It&rsquo;s very similar to the one for a single column:</p>\r\n\r\n<div style=\"box-sizing: border-box; color: rgb(45, 45, 45); font-family: oxygen, sans-serif; font-size: 18px;\">\r\n<div class=\"syntaxhighlighter nogutter  sql\" id=\"highlighter_737400\" style=\"box-sizing: border-box; position: relative;\">\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"width: 700px; margin-bottom: 20px; font-size: 14px; background-color: transparent; border: 1px solid rgb(237, 237, 237); color: rgb(0, 0, 0); border-radius: 0px 4px 4px; overflow-x: auto; display: block; font-family: &quot;fira code&quot;, monospace; padding: 30px 0px 32px 16px;\">\r\n	<tbody style=\"box-sizing: border-box; padding: 0px;\">\r\n		<tr style=\"box-sizing: border-box; border-radius: 3px; padding: 0px;\">\r\n			<td class=\"code\" style=\"box-sizing: border-box; line-height: 20px; padding: 0px; font-size: 15px; border-bottom: none; border-radius: 0px 3px 3px;\">\r\n			<div class=\"container\" style=\"box-sizing: border-box; margin-right: auto; margin-left: auto; padding: 0px; width: fit-content;\">\r\n			<div class=\"line number1 index0 alt2\" style=\"box-sizing: border-box; padding: 0px;\"><code class=\"sql keyword\" style=\"box-sizing: border-box; border-radius: 2px; padding: 0px; background: inherit; color: rgb(68, 36, 169); font-family: &quot;fira code&quot;, monospace; font-size: 14px;\">SELECT</code>&nbsp;<code class=\"sql plain\" style=\"box-sizing: border-box; border-radius: 2px; padding: 0px; background: inherit; font-family: &quot;fira code&quot;, monospace; font-size: 14px;\">OrderID, ProductID,&nbsp;</code><code class=\"sql color2\" style=\"box-sizing: border-box; border-radius: 2px; padding: 0px; background: inherit; color: rgb(68, 36, 169); font-family: &quot;fira code&quot;, monospace; font-size: 14px;\">COUNT</code><code class=\"sql plain\" style=\"box-sizing: border-box; border-radius: 2px; padding: 0px; background: inherit; font-family: &quot;fira code&quot;, monospace; font-size: 14px;\">(*)</code></div>\r\n\r\n			<div class=\"line number2 index1 alt1\" style=\"box-sizing: border-box; padding: 0px;\"><code class=\"sql keyword\" style=\"box-sizing: border-box; border-radius: 2px; padding: 0px; background: inherit; color: rgb(68, 36, 169); font-family: &quot;fira code&quot;, monospace; font-size: 14px;\">FROM</code>&nbsp;<code class=\"sql plain\" style=\"box-sizing: border-box; border-radius: 2px; padding: 0px; background: inherit; font-family: &quot;fira code&quot;, monospace; font-size: 14px;\">OrderDetails</code></div>\r\n\r\n			<div class=\"line number3 index2 alt2\" style=\"box-sizing: border-box; padding: 0px;\"><code class=\"sql keyword\" style=\"box-sizing: border-box; border-radius: 2px; padding: 0px; background: inherit; color: rgb(68, 36, 169); font-family: &quot;fira code&quot;, monospace; font-size: 14px;\">GROUP</code>&nbsp;<code class=\"sql keyword\" style=\"box-sizing: border-box; border-radius: 2px; padding: 0px; background: inherit; color: rgb(68, 36, 169); font-family: &quot;fira code&quot;, monospace; font-size: 14px;\">BY</code>&nbsp;<code class=\"sql plain\" style=\"box-sizing: border-box; border-radius: 2px; padding: 0px; background: inherit; font-family: &quot;fira code&quot;, monospace; font-size: 14px;\">OrderID, ProductID</code></div>\r\n\r\n			<div class=\"line number4 index3 alt1\" style=\"box-sizing: border-box; padding: 0px;\"><code class=\"sql keyword\" style=\"box-sizing: border-box; border-radius: 2px; padding: 0px; background: inherit; color: rgb(68, 36, 169); font-family: &quot;fira code&quot;, monospace; font-size: 14px;\">HAVING</code>&nbsp;<code class=\"sql color2\" style=\"box-sizing: border-box; border-radius: 2px; padding: 0px; background: inherit; color: rgb(68, 36, 169); font-family: &quot;fira code&quot;, monospace; font-size: 14px;\">COUNT</code><code class=\"sql plain\" style=\"box-sizing: border-box; border-radius: 2px; padding: 0px; background: inherit; font-family: &quot;fira code&quot;, monospace; font-size: 14px;\">(*)&gt;1</code></div>\r\n			</div>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n\r\n<h4 style=\"box-sizing: border-box; color: rgb(0, 0, 0); font-weight: 700; line-height: initial; font-family: oxygen, sans-serif; font-size: 18px;\">RESULT</h4>\r\n\r\n<p style=\"box-sizing: border-box; color: rgb(45, 45, 45); font-family: oxygen, sans-serif; font-size: 18px;\">Number of Records: 2</p>\r\n\r\n<p style=\"box-sizing: border-box; color: rgb(45, 45, 45); font-family: oxygen, sans-serif; font-size: 18px;\">Above, we can confirm that the ordering system does indeed have a bug. Like the first example using a single column, this second example similarly allows us to find errors in the ordering system. In this case, products are being registered as a new order even though they were added to the same cart by the same customer. Now you, as the business owner, can take proper corrective actions to rectify this bug in your order management system.</p>\r\n\r\n<p style=\"box-sizing: border-box; color: rgb(45, 45, 45); font-family: oxygen, sans-serif; font-size: 18px;\">Note that above, we used&nbsp;<code style=\"box-sizing: border-box; border-radius: 2px; padding: 2px 8px; background-color: rgb(238, 245, 255); color: rgb(68, 36, 169); font-family: &quot;fira code&quot;, monospace; font-size: 14px;\">COUNT(*)</code>&nbsp;and not a column-specific counter such as&nbsp;<code style=\"box-sizing: border-box; border-radius: 2px; padding: 2px 8px; background-color: rgb(238, 245, 255); color: rgb(68, 36, 169); font-family: &quot;fira code&quot;, monospace; font-size: 14px;\">COUNT(OrderID)</code>.&nbsp;<code style=\"box-sizing: border-box; border-radius: 2px; padding: 2px 8px; background-color: rgb(238, 245, 255); color: rgb(68, 36, 169); font-family: &quot;fira code&quot;, monospace; font-size: 14px;\">COUNT(*)</code>&nbsp;counts all rows, whereas&nbsp;<code style=\"box-sizing: border-box; border-radius: 2px; padding: 2px 8px; background-color: rgb(238, 245, 255); color: rgb(68, 36, 169); font-family: &quot;fira code&quot;, monospace; font-size: 14px;\">COUNT (Column)</code>&nbsp;only counts non-null values in the specified column. However, in this example, it will not have made a difference either way &ndash; there were no null values in either of the two columns being grouped.</p>\r\n', '2022-03-24 17:05:15', 13),
(49, 'Hi', '<p style=\"margin: 0px 0px 15px; padding: 0px; text-align: justify; color: rgb(0, 0, 0); font-family: &quot;Open Sans&quot;, Arial, sans-serif; font-size: 14px;\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam eu pharetra est. Aliquam egestas massa in ullamcorper laoreet. Maecenas mattis sollicitudin elementum. Maecenas congue iaculis convallis. Nulla quis neque eros. Morbi aliquam finibus tempor. Ut non dolor ut nibh tempor porttitor et sed odio. Fusce at sagittis libero, non lobortis mi. Integer quam libero, dignissim lacinia lorem ut, egestas convallis massa. Proin non massa vel risus interdum convallis. Sed ullamcorper nisi vel turpis egestas, at aliquam lectus porta. Quisque elementum, magna sit amet gravida hendrerit, ante tortor dapibus diam, quis scelerisque felis purus quis nisl. In rhoncus ligula quis est malesuada convallis. Nunc nec lectus lectus. Vivamus non felis at lorem varius suscipit sit amet vel lectus.</p>\r\n\r\n<p style=\"margin: 0px 0px 15px; padding: 0px; text-align: justify; color: rgb(0, 0, 0); font-family: &quot;Open Sans&quot;, Arial, sans-serif; font-size: 14px;\">Nullam eget hendrerit nisi. Sed in facilisis ligula. Vivamus bibendum efficitur tortor fringilla posuere. Donec condimentum blandit est sit amet pellentesque. Proin eget elit vel tortor vehicula condimentum. Aenean eu sollicitudin lectus, in consectetur est. Sed at maximus massa.</p>\r\n\r\n<p style=\"margin: 0px 0px 15px; padding: 0px; text-align: justify; color: rgb(0, 0, 0); font-family: &quot;Open Sans&quot;, Arial, sans-serif; font-size: 14px;\">Vivamus et felis viverra, fringilla tellus eget, mollis augue. Duis a erat in lectus laoreet malesuada non auctor mauris. Sed non ligula tempus, eleifend ante vel, egestas odio. Donec nec gravida quam. Pellentesque finibus, mauris at accumsan gravida, sapien dolor vehicula turpis, vel faucibus urna nunc congue orci. Pellentesque iaculis ante sed tempor euismod. Sed eget convallis lorem. Duis elementum imperdiet sem. Integer molestie quis quam ac lacinia.</p>\r\n\r\n<p style=\"margin: 0px 0px 15px; padding: 0px; text-align: justify; color: rgb(0, 0, 0); font-family: &quot;Open Sans&quot;, Arial, sans-serif; font-size: 14px;\">Vestibulum pharetra placerat lectus vel cursus. Ut hendrerit eget nisi ac placerat. Nunc suscipit enim nec sodales fringilla. Quisque convallis aliquam posuere. Donec tincidunt eros neque, non laoreet libero accumsan non. Proin blandit eros mi, sed congue diam viverra sit amet. Suspendisse scelerisque mauris ornare, suscipit eros id, posuere tellus. Donec ut ex ante. Sed et pellentesque libero. Morbi ligula lorem, volutpat eget enim ut, blandit fringilla lacus. Praesent semper egestas nunc, et varius nulla pretium id.</p>\r\n\r\n<p style=\"margin: 0px 0px 15px; padding: 0px; text-align: justify; color: rgb(0, 0, 0); font-family: &quot;Open Sans&quot;, Arial, sans-serif; font-size: 14px;\">Donec a posuere urna. Curabitur ut orci elit. Fusce sit amet bibendum purus. Ut egestas imperdiet porta. Maecenas sagittis justo eget ex scelerisque maximus at nec diam. Praesent id luctus orci. Nunc tincidunt nulla id iaculis rhoncus. Morbi fringilla ligula at elementum ornare. Nam ac pulvinar est, eget condimentum tellus. Praesent placerat sed elit ut accumsan. Duis velit nibh, dignissim a euismod sed, tincidunt eget purus. Donec fringilla sollicitudin nibh vitae tristique. Pellentesque commodo lacus vitae erat varius, ut dapibus eros accumsan. Nunc interdum leo at sem tristique congue. Vivamus id ex ut neque pretium suscipit non ac odio. Duis purus risus, auctor consequat placerat sed, semper vitae dolor.<br />\r\n<br />\r\n&nbsp;</p>\r\n', '2022-03-27 12:27:32', 15);

--
-- Indexes for dumped tables
--

--
-- Indexes for table `admin`
--
ALTER TABLE `admin`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `category`
--
ALTER TABLE `category`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `comments`
--
ALTER TABLE `comments`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `contact`
--
ALTER TABLE `contact`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `unique_customer` (`name`,`phone`);

--
-- Indexes for table `images`
--
ALTER TABLE `images`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `posts`
--
ALTER TABLE `posts`
  ADD PRIMARY KEY (`id`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `admin`
--
ALTER TABLE `admin`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=2;

--
-- AUTO_INCREMENT for table `category`
--
ALTER TABLE `category`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=16;

--
-- AUTO_INCREMENT for table `comments`
--
ALTER TABLE `comments`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=18;

--
-- AUTO_INCREMENT for table `contact`
--
ALTER TABLE `contact`
  MODIFY `id` bigint(20) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=23;

--
-- AUTO_INCREMENT for table `images`
--
ALTER TABLE `images`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=33;

--
-- AUTO_INCREMENT for table `posts`
--
ALTER TABLE `posts`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=50;
COMMIT;